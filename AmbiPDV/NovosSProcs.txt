CREATE OR ALTER PROCEDURE SP_TRI_GRAVANFVENDA (PID_VENDEDOR SMALLINT, PNF_SERIE VARCHAR(3), PDT_SAIDA DATE, PHR_SAIDA TIME, PID_FMAPGTO SMALLINT, PVLR_TROCO TYPE OF COLUMN TB_NFVENDA.VLR_TROCO)
RETURNS (
	RID_NFVENDA INTEGER
)
AS
DECLARE vNF_NUMERO TYPE OF COLUMN TB_NFVENDA.NF_NUMERO;
BEGIN
SELECT NEXT VALUE FOR GEN_TB_NFVENDA_ID
FROM RDB$DATABASE
INTO :rID_NFVENDA;

SELECT MAX(NF_NUMERO)
FROM TB_NFVENDA
WHERE NF_MODELO = '59'
AND NF_SERIE = :PNF_SERIE
INTO :vNF_NUMERO;

IF (:vNF_NUMERO IS NULL) THEN vNF_NUMERO = 0;

vNF_NUMERO = vNF_NUMERO + 1;

INSERT INTO TB_NFVENDA 
		(ID_NFVENDA,
		ID_NATOPE,
		ID_VENDEDOR,
		ID_CLIENTE,
		NF_NUMERO,
		NF_SERIE,
		NF_MODELO,
		DT_EMISSAO,
		DT_SAIDA,
		HR_SAIDA,
		ESPECIE,
		TIPO_FRETE,
		PES_LIQUID,
		PES_BRUTO,
		STATUS,
		ENT_SAI,
		ID_FMAPGTO,
		ID_PARCELA,
		MARCA,
		QTD_VOLUM,
		NUM_VOLUM,
		PROD_REV,
		SOMA_FRETE,
		VLR_TROCO,
		IND_PRES,
		IND_IE_DEST,
		DESCONTO_CONDICIONAL,
		INF_COMP_FIXA,
		INF_COMP_EDIT,
		ENDERECO_ENTREGA,
		ENVIO_API)
	VALUES (:rID_NFVENDA,
	2,
	:pID_VENDEDOR,
	0,
	:vNF_NUMERO,
	:pNF_SERIE,
	'59',
	CURRENT_DATE,
	:pDT_SAIDA,
	:pHR_SAIDA,
	NULL,
	'9',
	0,
	0,
	'E',
	'1',
	:pID_FMAPGTO,
	2,
	NULL,
	0,
	NULL,
	'N',
	'N',
	:pVLR_TROCO,
	NULL,
	NULL,
	'S',
	NULL,
	NULL,
	'N',
	NULL);

SUSPEND;
END



CREATE OR ALTER PROCEDURE SP_TRI_GRAVANFVITEM (PID_NFVENDA INTEGER, PID_IDENTIFICADOR INTEGER, PNUM_ITEM SMALLINT, PQTD_ITEM TYPE OF COLUMN TB_NFV_ITEM.QTD_ITEM, PVLR_DESC TYPE OF COLUMN TB_NFV_ITEM.VLR_DESC, PCSOSN VARCHAR(3), PVLR_TRIB_FED TYPE OF COLUMN TB_NFV_ITEM.VLR_TRIB_FED, PVLR_TRIB_EST TYPE OF COLUMN TB_NFV_ITEM.VLR_TRIB_EST, PVLR_UNIT TYPE OF COLUMN TB_NFV_ITEM.VLR_UNIT)
RETURNS (
	RID_NFVITEM INTEGER
)
AS
DECLARE VARIABLE vCFOP TYPE OF COLUMN TB_NFV_ITEM.CFOP;

DECLARE VARIABLE vUNI_MEDIDA TYPE OF COLUMN TB_NFV_ITEM.UNI_MEDIDA;

DECLARE VARIABLE vPRC_CUSTO TYPE OF COLUMN TB_NFV_ITEM.VLR_CUSTO;
BEGIN
SELECT
	NEXT VALUE FOR GEN_TB_NFV_ITEM_ID
FROM
	RDB$DATABASE INTO
		:rID_NFVITEM;

SELECT
	A.CFOP,
	A.UNI_MEDIDA,
	A.PRC_CUSTO
FROM
	TB_ESTOQUE A
JOIN TB_EST_IDENTIFICADOR B ON
	A.ID_ESTOQUE = B.ID_ESTOQUE
WHERE
	B.ID_IDENTIFICADOR = :pID_IDENTIFICADOR INTO
		:vCFOP,
		:vUNI_MEDIDA,
		:vPRC_CUSTO;

INSERT
	INTO
		TB_NFV_ITEM (ID_NFVITEM,
		ID_NFVENDA,
		ID_IDENTIFICADOR,
		CFOP,
		NUM_ITEM,
		QTD_ITEM,
		UNI_MEDIDA,
		VLR_TOTAL,
		VLR_DESC,
		VLR_CUSTO,
		PRC_LISTA,
		CF,
		VLR_FRETE,
		VLR_SEGURO,
		VLR_DESPESA,
		RET_PIS_COF_CSLL,
		RET_IRRF,
		COD_ENQ,
		COD_BASE,
		CSOSN,
		NPED_COMPRA,
		ITEM_COMPRA,
		VLR_TOTTRIB,
		FCI,
		VLR_ICM_DESO,
		ID_MOTIVO_DESO,
		EST_BX,
		VLR_TRIB_FED,
		VLR_TRIB_EST,
		VLR_TRIB_MUN,
		INCLUIR_FATURA,
		VLR_UNIT,
		IMP_MANUAL_DEVOL,
		VLR_RETENCAO)
	VALUES(:rID_NFVITEM,
	:pID_NFVENDA,
	:pID_IDENTIFICADOR,
	:vCFOP,
	:pNUM_ITEM,
	:pQTD_ITEM,
	:vUNI_MEDIDA,
	(:pVLR_UNIT * :pQTD_ITEM),
	:pVLR_DESC,
	:vPRC_CUSTO,
	0,
	NULL,
	0,
	0,
	0,
	0,
	0,
	NULL,
	NULL,
	:pCSOSN,
	NULL,
	0,
	(:pVLR_TRIB_FED + :pVLR_TRIB_EST),
	NULL,
	NULL,
	NULL,
	'S',
	:pVLR_TRIB_FED,
	:pVLR_TRIB_EST,
	0,
	'S',
	:pVLR_UNIT,
	NULL,
	0);
SUSPEND;
END


CREATE OR ALTER PROCEDURE SP_TRI_GRAVASAT (PID_NFVENDA INTEGER, PCHAVE VARCHAR(44), PNUMERO_CFE INTEGER, PNUM_SERIE_SAT VARCHAR(9))
RETURNS (
	RID_REGISTRO INTEGER
)
AS
DECLARE VARIABLE vDT_EMISSAO TYPE OF COLUMN TB_SAT.DT_EMISSAO;

DECLARE VARIABLE vHR_EMISSAO TYPE OF COLUMN TB_SAT.HR_EMISSAO;
BEGIN
SELECT
	DT_SAIDA,
	HR_SAIDA
FROM
	TB_NFVENDA
WHERE
	ID_NFVENDA = :pID_NFVENDA INTO
		:vDT_EMISSAO,
		:vHR_EMISSAO;

SELECT
	NEXT VALUE FOR GEN_TB_SAT_ID
FROM
	RDB$DATABASE INTO
		:rID_REGISTRO;

INSERT
	INTO
		TB_SAT (ID_REGISTRO,
		ID_NFVENDA,
		CHAVE,
		DT_EMISSAO,
		HR_EMISSAO,
		STATUS,
		STATUS_DES,
		NUMERO_CFE,
		NUM_SERIE_SAT)
	VALUES(:rID_REGISTRO,
	:pID_NFVENDA,
	:pCHAVE,
	:vDT_EMISSAO,
	:vHR_EMISSAO,
	'06000',
	'Emitido com sucesso + conteúdo notas',
	:pNUMERO_CFE,
	:pNUM_SERIE_SAT);
SUSPEND;
END



CREATE OR ALTER PROCEDURE SP_TRI_ATUALIZANFVENDA(pID_NFVENDA INTEGER)
AS
BEGIN
	UPDATE TB_NFVENDA SET STATUS = 'I' WHERE ID_NFVENDA = :pID_NFVENDA;
END


CREATE OR ALTER VIEW V_TRI_CUPONSCANCELAVEIS (VALOR_TOTAL, TS_VENDA, CHAVE, NF_SERIE, ID_NFVENDA, ID_REGISTRO)
AS
SELECT B.TOT_NF, CAST(A.DT_SAIDA || ' ' || A.HR_SAIDA AS TIMESTAMP), COALESCE(C.CHAVE, 'BETERRABA'), A.NF_SERIE, A.ID_NFVENDA, C.ID_REGISTRO
FROM TB_NFVENDA A 
JOIN TB_NFVENDA_TOT B ON A.ID_NFVENDA = B.ID_NFVENDA
LEFT JOIN TB_SAT C ON A.ID_NFVENDA = C.ID_NFVENDA
WHERE (DATEDIFF(MINUTE FROM CAST(A.DT_SAIDA || ' ' || A.HR_SAIDA AS TIMESTAMP) TO CURRENT_TIMESTAMP) < 30) AND A.STATUS = 'I'


CREATE OR ALTER PROCEDURE SP_TRI_CONTANFVPAGTO (PNF_SERIE VARCHAR(3), PTS_ABERTURA TIMESTAMP)
RETURNS (RCOUNT_FMANCE INTEGER,	RID_FMANCFE INTEGER)
AS
BEGIN
	FOR 
	SELECT COUNT(A.ID_FMANFCE), A.ID_FMANFCE FROM TB_NFVENDA_FMAPAGTO_NFCE A
	JOIN TB_NFVENDA B ON A.ID_NFVENDA = B.ID_NFVENDA
    WHERE B.NF_SERIE = :pNF_SERIE AND CAST ((B.DT_SAIDA || ' ' || B.HR_SAIDA) AS TIMESTAMP) >= :pTS_ABERTURA
    	GROUP BY A.ID_FMANFCE
	INTO :rCOUNT_FMANCE, :rID_FMANCFE
DO SUSPEND;
END





CREATE OR ALTER PROCEDURE SP_TRI_NFVCTAREC 
(pID_NFVENDA INTEGER, pDT_VENCIMENTO DATE, pDESCRICAO VARCHAR(50), pID_CLIENTE INTEGER, pID_NUMPAG INTEGER) 
RETURNS (rID_CTAREC INTEGER) 
AS
DECLARE VARIABLE vNF_SERIE TYPE OF COLUMN TB_NFVENDA.NF_SERIE;
DECLARE VARIABLE vNF_NUMERO TYPE OF COLUMN TB_NFVENDA.NF_NUMERO;
DECLARE VARIABLE vVALOR TYPE OF COLUMN TB_NFVENDA_FMAPAGTO_NFCE.VLR_PAGTO;
BEGIN
SELECT	NEXT VALUE FOR GEN_TB_CTAREC_ID
FROM RDB$DATABASE
INTO :rID_CTAREC;

SELECT NF_SERIE, NF_NUMERO
FROM TB_NFVENDA
WHERE ID_NFVENDA = :pID_NFVENDA
INTO :vNF_SERIE, :vNF_NUMERO;

SELECT VLR_PAGTO
FROM TB_NFVENDA_FMAPAGTO_NFCE
WHERE ID_NUMPAG = :pID_NUMPAG
INTO :vVALOR;

INSERT
	INTO
	TB_CONTA_RECEBER (ID_CTAREC ,
	DOCUMENTO ,
	HISTORICO ,
	DT_EMISSAO ,
	DT_VENCTO ,
	VLR_CTAREC ,
	TIP_CTAREC ,
	ID_PORTADOR ,
	ID_CLIENTE ,
	INV_REFERENCIA )
VALUES (:rID_CTAREC ,
(CAST(:vNF_SERIE AS VARCHAR(12)) || '-' || CAST(:vNF_NUMERO AS VARCHAR(12))) ,
:pDESCRICAO ,
CURRENT_DATE ,
:pDT_VENCIMENTO ,
:vVALOR,
'C' ,
1 ,
:pID_CLIENTE ,
'D' || 
LPAD(:rID_CTAREC,7,'0') || 
LPAD(:vNF_SERIE, 2, '0') || 
'X' || 
LPAD(:vNF_NUMERO, 7, '0') ) ;

INSERT INTO TB_NFV_CTAREC
(ID_NFVENDA, ID_CTAREC, ID_NUMPAG)
VALUES(:pID_NFVENDA, :rID_CTAREC, :pID_NUMPAG);

SUSPEND;

END

CREATE OR ALTER PROCEDURE SP_TRI_LANCAMOVDIARIO (NUMCAIXA VARCHAR(60),
VALOR NUMERIC,
DESCRICAO_MOV VARCHAR(60),
CONTA_ORIGEM SMALLINT,
CONTA_DESTINO SMALLINT) RETURNS ( ID_MOVTO INTEGER ) AS
DECLARE VARIABLE ultimo_mov INTEGER;
BEGIN
	
SELECT	NEXT VALUE FOR GEN_TB_MOVDIARIO_ID
FROM RDB$DATABASE
INTO :ID_MOVTO;

INSERT
	INTO
	TB_MOVDIARIO(ID_MOVTO,
	DT_MOVTO,
	HR_MOVTO,
	HISTORICO,
	TIP_MOVTO,
	VLR_MOVTO,
	ID_CTAPLA)
VALUES(:ID_MOVTO,
CURRENT_DATE,
CURRENT_TIME,
:DESCRICAO_MOV,
'D',
:VALOR,
:CONTA_DESTINO);

INSERT
	INTO
	TB_MOVDIARIO(ID_MOVTO,
	DT_MOVTO,
	HR_MOVTO,
	HISTORICO,
	TIP_MOVTO,
	VLR_MOVTO,
	ID_CTAPLA)
VALUES((
SELECT
	NEXT VALUE FOR GEN_TB_MOVDIARIO_ID
FROM
	RDB$DATABASE),
CURRENT_DATE,
CURRENT_TIME,
:DESCRICAO_MOV,
'C',
:VALOR,
:CONTA_ORIGEM);



SUSPEND;

END



CREATE OR ALTER PROCEDURE SP_TRI_NFVFMAPGTO_INSERT (PVALOR NUMERIC, PID_NFVENDA INTEGER, PID_FMANFCE INTEGER, PID_PARCELA INTEGER)
RETURNS (
	RID_FMAPAGTO INTEGER
)
AS
BEGIN
	SELECT NEXT VALUE FOR gen_tb_nfvenda_fmapagto_nfce_id FROM RDB$DATABASE INTO :rID_FMAPAGTO;
	
	INSERT INTO TB_NFVENDA_FMAPAGTO_NFCE
	(ID_NUMPAG, VLR_PAGTO, ID_NFVENDA, ID_FMANFCE, ID_PARCELA)
	VALUES(:rID_FMAPAGTO, :pVALOR, :pID_NFVENDA, :pID_FMANFCE, :pID_PARCELA);

END


-------------------------------------------

DataSetConfig.DADOSINICIAIS - Nova versão:

CREATE OR ALTER PROCEDURE SP_TRI_DADOSINICIAIS
RETURNS (
	erro VARCHAR(64)
)
AS
BEGIN
	erro = 'a vista';
	EXECUTE STATEMENT 'UPDATE OR INSERT INTO TRI_PDV_METODOS (ID_PAGAMENTO, DESCRICAO, DIAS, METODO, PGTOCFE, ATIVO) VALUES (1, ''DINHEIRO'', 0, ''C'', ''01'', ''S'');';
	
	erro = 'a prazo 30';
	EXECUTE STATEMENT 'UPDATE OR INSERT INTO TRI_PDV_METODOS (ID_PAGAMENTO, DESCRICAO, DIAS, METODO, PGTOCFE, ATIVO) VALUES (2, ''CHEQUE'', 0, ''C'', ''02'', ''S'');';
	
	erro = 'a prazo 14';
	EXECUTE STATEMENT 'UPDATE OR INSERT INTO TRI_PDV_METODOS (ID_PAGAMENTO, DESCRICAO, DIAS, METODO, PGTOCFE, ATIVO) VALUES (3, ''CRÉDITO'', 0, ''C'', ''03'', ''S'');';
	
	erro = 'credito';
	EXECUTE STATEMENT 'UPDATE OR INSERT INTO TRI_PDV_METODOS (ID_PAGAMENTO, DESCRICAO, DIAS, METODO, PGTOCFE, ATIVO) VALUES (4, ''DÉBITO'', 0, ''c'', ''04'', ''S'');';
	
	erro = 'debito';
	EXECUTE STATEMENT 'UPDATE OR INSERT INTO TRI_PDV_METODOS (ID_PAGAMENTO, DESCRICAO, DIAS, METODO, PGTOCFE, ATIVO) VALUES (5, ''CRÉDITO LOJA'', 0, ''C'', ''05'', ''S'');';
	
	erro = 'aliment';
	EXECUTE STATEMENT 'UPDATE OR INSERT INTO TRI_PDV_METODOS (ID_PAGAMENTO, DESCRICAO, DIAS, METODO, PGTOCFE, ATIVO) VALUES (6, ''V. ALIMENTAÇÃO'', 0, ''C'', ''10'', ''S'');';
	
	erro = 'refeicao';
	EXECUTE STATEMENT 'UPDATE OR INSERT INTO TRI_PDV_METODOS (ID_PAGAMENTO, DESCRICAO, DIAS, METODO, PGTOCFE, ATIVO) VALUES (7, ''V. REFEIÇÃO'', 0, ''C'', ''11'', ''S'');';

	erro = 'presente';
	EXECUTE STATEMENT 'UPDATE OR INSERT INTO TRI_PDV_METODOS (ID_PAGAMENTO, DESCRICAO, DIAS, METODO, PGTOCFE, ATIVO) VALUES (8, ''V. PRESENTE'', 0, ''C'', ''12'', ''S'');';
	
	erro = 'combust';
	EXECUTE STATEMENT 'UPDATE OR INSERT INTO TRI_PDV_METODOS (ID_PAGAMENTO, DESCRICAO, DIAS, METODO, PGTOCFE, ATIVO) VALUES (9, ''V. COMBUSTÍVEL'', 0, ''C'', ''13'', ''S'');';
	
	erro = 'outros';
	EXECUTE STATEMENT 'UPDATE OR INSERT INTO TRI_PDV_METODOS (ID_PAGAMENTO, DESCRICAO, DIAS, METODO, PGTOCFE, ATIVO) VALUES (10, ''OUTROS'', 0, ''C'', ''99'', ''S'');';
	
	erro = 'deu certo';
	SUSPEND;
	WHEN ANY DO
	BEGIN
		
	END 
	END;

