<Application x:Class="PDV_WPF.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:PDV_WPF"
             xmlns:Controls="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Input.Toolkit"
             xmlns:System="clr-namespace:System;assembly=mscorlib"
             xmlns:local1="clr-namespace:PDV_WPF.Controls"
             StartupUri="Telas/Login.xaml">
    <Application.Resources>
        <local1:WaterMarkTXB x:Key="InputToVisibility"></local1:WaterMarkTXB>
        <LinearGradientBrush x:Key="TextBoxBorder" EndPoint="0,20" MappingMode="Absolute" StartPoint="0,0">
            <GradientStop Color="#ABADB3" Offset="0.05"/>
            <GradientStop Color="#E2E3EA" Offset="0.07"/>
            <GradientStop Color="#E3E9EF" Offset="1"/>
        </LinearGradientBrush>
        <Style x:Key="WindowTemplate" TargetType="{x:Type Window}">
            <Setter Property="ResizeMode" Value="NoResize"/>
            <Setter Property="ShowInTaskbar" Value="True"/>
            <Setter Property="WindowStyle" Value="None"/>
            <Setter Property="AllowsTransparency" Value="True"/>
            <Setter Property="Height" Value="381"/>
            <Setter Property="Width" Value="573"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Window}">
                        <Border Margin="10" CornerRadius="10">
                            <Border.Effect>
                                <DropShadowEffect ShadowDepth="1.5" Opacity="0.65" Direction="300" BlurRadius="8"/>
                            </Border.Effect>
                            <Border BorderBrush="Black" CornerRadius="10" Grid.ColumnSpan="2" Background="#FF0BC9AD">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="1*"/>
                                        <ColumnDefinition Width="4*"/>
                                    </Grid.ColumnDefinitions>
                                    <Canvas Grid.Column="1" Background="#FFFEFEFE">
                                        <Viewbox HorizontalAlignment="Center" Width="234.127" Stretch="Fill" Height="270.377" VerticalAlignment="Bottom" Canvas.Left="180" Canvas.Top="20">
                                            <Canvas Height="91.906" Width="79.583">
                                                <Path Data="F1 M 69.875,66.932 L 53.101,66.932 L 39.779,43.877 L 26.479,66.935 L 9.709,66.935 L 39.779,14.835 L 69.875,66.932 Z" Height="51.935" Canvas.Left="9" Stretch="Fill" Canvas.Top="15" Width="60.875">
                                                    <Path.Fill>
                                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                            <LinearGradientBrush.RelativeTransform>
                                                                <TransformGroup>
                                                                    <ScaleTransform CenterY="0.5" CenterX="0.5"/>
                                                                    <SkewTransform CenterY="0.5" CenterX="0.5"/>
                                                                    <RotateTransform Angle="-113.199" CenterY="0.5" CenterX="0.5"/>
                                                                    <TranslateTransform/>
                                                                </TransformGroup>
                                                            </LinearGradientBrush.RelativeTransform>
                                                            <GradientStop Offset="0.00" Color="#1908C9A9"/>
                                                            <GradientStop Offset="0.08" Color="#1907B9A1"/>
                                                            <GradientStop Offset="1.00" Color="#19004C6D"/>
                                                        </LinearGradientBrush>
                                                    </Path.Fill>
                                                </Path>
                                                <Path Data="F1 M 1.078,68.281 L 39.778,90.611 L 78.478,68.281 L 78.478,23.624 L 39.778,1.294 L 1.078,23.624 L 1.078,68.281 Z M 39.778,91.881 L 0.000,68.900 L 0.000,22.977 L 0.270,22.815 L 39.778,0.000 L 53.865,8.137 L 79.556,22.977 L 79.556,68.900 L 79.286,69.062 L 39.778,91.881 Z">
                                                    <Path.Fill>
                                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                            <LinearGradientBrush.RelativeTransform>
                                                                <TransformGroup>
                                                                    <ScaleTransform CenterY="0.5" CenterX="0.5"/>
                                                                    <SkewTransform CenterY="0.5" CenterX="0.5"/>
                                                                    <RotateTransform Angle="-113.199" CenterY="0.5" CenterX="0.5"/>
                                                                    <TranslateTransform/>
                                                                </TransformGroup>
                                                            </LinearGradientBrush.RelativeTransform>
                                                            <GradientStop Offset="0.00" Color="#1908C9A9"/>
                                                            <GradientStop Offset="0.08" Color="#1907B9A1"/>
                                                            <GradientStop Offset="1.00" Color="#19004C6D"/>
                                                        </LinearGradientBrush>
                                                    </Path.Fill>
                                                </Path>
                                            </Canvas>
                                        </Viewbox>
                                        <ContentPresenter/>
                                    </Canvas>
                                    <!--//TODO: não seria "Open Sans"?-->
                                    <!--<Label Content="PDV" FontFamily="Open Sans" FontSize="15" HorizontalContentAlignment="Right" VerticalContentAlignment="Center" Foreground="#FFEEEEEE" Margin="10,15,17,0" RenderTransformOrigin="0.5,0.5" VerticalAlignment="Top" FontWeight="Bold"/>
                                    <Label Content="Ambi" FontFamily="Open Sans" FontSize="15" HorizontalContentAlignment="Left" VerticalContentAlignment="Center" Foreground="#FFEEEEEE" Margin="18,15,10,0" RenderTransformOrigin="0.5,0.5" VerticalAlignment="Top"/>-->
                                    <TextBlock FontFamily="Open Sans" FontSize="15" Foreground="#FFEEEEEE" Margin="10, 20" HorizontalAlignment="Center"><Run Text="Ambi"/><Run FontWeight="Bold" Text="PDV"/></TextBlock>
                                    <Viewbox HorizontalAlignment="Center" Width="49.46" Stretch="Fill" Height="57.118" VerticalAlignment="Bottom" Margin="30.356,0,30.357,31.721">
                                        <Canvas Height="91.906" Width="79.583">
                                            <Path Fill="#ffffffff" Data="F1 M 69.875,66.932 L 53.101,66.932 L 39.779,43.877 L 26.479,66.935 L 9.709,66.935 L 39.779,14.835 L 69.875,66.932 Z" Height="51.935" Canvas.Left="9" Stretch="Fill" Canvas.Top="15" Width="60.875"/>
                                            <Path Fill="#ffffffff" Data="F1 M 1.078,68.281 L 39.778,90.611 L 78.478,68.281 L 78.478,23.624 L 39.778,1.294 L 1.078,23.624 L 1.078,68.281 Z M 39.778,91.881 L 0.000,68.900 L 0.000,22.977 L 0.270,22.815 L 39.778,0.000 L 53.865,8.137 L 79.556,22.977 L 79.556,68.900 L 79.286,69.062 L 39.778,91.881 Z" />
                                        </Canvas>
                                    </Viewbox>
                                    <Label Content="Ambisoft" Margin="0,0,0,9" VerticalAlignment="Bottom" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" FontFamily="Open Sans" Foreground="#FFEEEEEE" Width="75.0875"/>
                                </Grid>
                            </Border>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="RoundedCorners" BasedOn="{x:Null}" TargetType="{x:Type TextBox}">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorder}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="2" Background="{TemplateBinding Background}" SnapsToDevicePixels="true" CornerRadius="5">
                            <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="RoundedACBox" TargetType="{x:Type Controls:AutoCompleteBox}">
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="Padding" Value="2"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FFA3AEB9" Offset="0"/>
                        <GradientStop Color="#FF8399A9" Offset="0.375"/>
                        <GradientStop Color="#FF718597" Offset="0.375"/>
                        <GradientStop Color="#FF617584" Offset="1"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="White"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="MinWidth" Value="45"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Controls:AutoCompleteBox}">
                        <Grid Opacity="{TemplateBinding Opacity}">
                            <TextBox x:Name="Text" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Foreground="{TemplateBinding Foreground}" IsTabStop="True" Margin="12,0,0,0" Padding="{TemplateBinding Padding}" Style="{TemplateBinding TextBoxStyle}"/>
                            <Border x:Name="ValidationErrorElement" BorderBrush="#FFDB000C" BorderThickness="1" CornerRadius="1" Visibility="Collapsed">
                                <Border.ToolTip>
                                    <ToolTip x:Name="validationTooltip" Placement="Right">
                                        <ToolTip.Triggers>
                                            <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="validationTooltip">
                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                <DiscreteObjectKeyFrame.Value>
                                                                    <System:Boolean>True</System:Boolean>
                                                                </DiscreteObjectKeyFrame.Value>
                                                            </DiscreteObjectKeyFrame>
                                                        </ObjectAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                        </ToolTip.Triggers>
                                        <ToolTip.Template>
                                            <ControlTemplate TargetType="{x:Type ToolTip}">
                                                <Grid x:Name="Root" Margin="5,0" Opacity="0" RenderTransformOrigin="0,0">
                                                    <Grid.RenderTransform>
                                                        <TranslateTransform X="-25"/>
                                                    </Grid.RenderTransform>
                                                    <Border Background="#052A2E31" CornerRadius="5" Margin="4,4,-4,-4"/>
                                                    <Border Background="#152A2E31" CornerRadius="4" Margin="3,3,-3,-3"/>
                                                    <Border Background="#252A2E31" CornerRadius="3" Margin="2,2,-2,-2"/>
                                                    <Border Background="#352A2E31" CornerRadius="2" Margin="1,1,-1,-1"/>
                                                    <Border Background="#FFDC000C" CornerRadius="2">
                                                        <TextBlock Foreground="White" MaxWidth="250" Margin="8,4" TextWrapping="Wrap" Text="{Binding (Validation.Errors)[0].ErrorContent}"/>
                                                    </Border>
                                                </Grid>
                                            </ControlTemplate>
                                        </ToolTip.Template>
                                    </ToolTip>
                                </Border.ToolTip>
                                <Grid Background="Transparent" HorizontalAlignment="Right" Height="12" Margin="1,-4,-4,0" VerticalAlignment="Top" Width="12">
                                    <Path Data="M1,0L6,0A2,2,90,0,1,8,2L8,7z" Fill="#FFDC000C" Margin="1,3,0,0"/>
                                    <Path Data="M0,0L2,0 8,6 8,8" Fill="White" Margin="1,3,0,0"/>
                                </Grid>
                            </Border>
                            <Popup x:Name="Popup">
                                <Grid Background="{TemplateBinding Background}" Opacity="{TemplateBinding Opacity}">
                                    <Border x:Name="PopupBorder" BorderThickness="0" Background="#11000000" HorizontalAlignment="Stretch" Opacity="0">
                                        <Border.RenderTransform>
                                            <TranslateTransform X="1" Y="1"/>
                                        </Border.RenderTransform>
                                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="0" HorizontalAlignment="Stretch" Opacity="1" Padding="0">
                                            <Border.Background>
                                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                    <GradientStop Color="#FFDDDDDD" Offset="0"/>
                                                    <GradientStop Color="#AADDDDDD" Offset="1"/>
                                                </LinearGradientBrush>
                                            </Border.Background>
                                            <Border.RenderTransform>
                                                <TransformGroup>
                                                    <TranslateTransform X="-1" Y="-1"/>
                                                </TransformGroup>
                                            </Border.RenderTransform>
                                            <ListBox x:Name="Selector" BorderThickness="0" Background="{TemplateBinding Background}" Foreground="{TemplateBinding Foreground}" ScrollViewer.HorizontalScrollBarVisibility="Auto" ItemTemplate="{TemplateBinding ItemTemplate}" ItemContainerStyle="{TemplateBinding ItemContainerStyle}" ScrollViewer.VerticalScrollBarVisibility="Auto"/>
                                        </Border>
                                    </Border>
                                </Grid>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="RoundTxbWIcon" BasedOn="{x:Null}" TargetType="{x:Type TextBox}">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorder}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true" CornerRadius="5">
                            <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="150,0,0,0"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="WaterMarkTextBox" TargetType="{x:Type TextBox}">
            <Setter Property="BorderBrush" Value="Black"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="Gray"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">

                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid>
                                <TextBlock x:Name="MaskTest" Text="Digite dessa forma, exemplo: 551112345678">
                                    <TextBlock.Visibility>
                                        
                                        <MultiBinding Converter="{StaticResource InputToVisibility}">
                                            <Binding ElementName="inputText" Path="Text.IsEmpty"/>
                                            <Binding ElementName="inputText" Path="IsFocused"/>
                                        </MultiBinding>
                                       
                                    </TextBlock.Visibility>
                                </TextBlock>
                                <TextBox x:Name="inputText" Background="Transparent" Visibility="Visible">
                                   
                                </TextBox>
                            </Grid>

                        </Border>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Application.Resources>
</Application>
