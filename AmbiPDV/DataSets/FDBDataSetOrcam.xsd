<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="FDBDataSetOrcam" targetNamespace="http://tempuri.org/FDBDataSetOrcam.xsd" xmlns:mstns="http://tempuri.org/FDBDataSetOrcam.xsd" xmlns="http://tempuri.org/FDBDataSetOrcam.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" GeneratorFunctionsComponentClassName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" UserFunctionsComponentName="QueriesTableAdapter" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="FDBConnString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="FDBConnString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.PDV_WPF.Properties.Settings.GlobalReference.Default.FDBConnString" Provider="FirebirdSql.Data.FirebirdClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TRI_ORCA_PRODUTOSTableAdapter" GeneratorDataComponentClassName="TRI_ORCA_PRODUTOSTableAdapter" Name="TRI_ORCA_PRODUTOS" UserDataComponentName="TRI_ORCA_PRODUTOSTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="FDBConnString (Settings)" DbObjectName="TRI_ORCA_PRODUTOS" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Fill" GenerateShortCommands="false" GeneratorSourceName="Fill" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT * FROM TRI_ORCA_PRODUTOS</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID_PRODUTO" DataSetColumn="ID_PRODUTO" />
              <Mapping SourceColumn="ID_ESTOQUE" DataSetColumn="ID_ESTOQUE" />
              <Mapping SourceColumn="QUANT" DataSetColumn="QUANT" />
              <Mapping SourceColumn="VALOR" DataSetColumn="VALOR" />
              <Mapping SourceColumn="DESCONTO" DataSetColumn="DESCONTO" />
              <Mapping SourceColumn="VALOR_TOT" DataSetColumn="VALOR_TOT" />
              <Mapping SourceColumn="ID_ORCAMENTO" DataSetColumn="ID_ORCAMENTO" />
              <Mapping SourceColumn="NUM_PRODUTO" DataSetColumn="NUM_PRODUTO" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="FDBConnString (Settings)" DbObjectName="&quot;SP_TRI_ORCAPROD_GETBY_ORCA&quot;" DbObjectType="StoredProcedure" FillMethodModifier="Public" FillMethodName="FillByOrca" GenerateMethods="Fill" GenerateShortCommands="true" GeneratorSourceName="FillByOrca" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="FillByOrca">
                <SelectCommand>
                  <DbCommand CommandType="StoredProcedure" ModifiedByUser="false">
                    <CommandText>"SP_TRI_ORCAPROD_GETBY_ORCA"</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="PID_ORCAMENTO" Precision="0" Scale="0" Size="4" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TRI_ORCA_ORCAMENTOSTableAdapter" GeneratorDataComponentClassName="TRI_ORCA_ORCAMENTOSTableAdapter" Name="TRI_ORCA_ORCAMENTOS" UserDataComponentName="TRI_ORCA_ORCAMENTOSTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="FDBConnString (Settings)" DbObjectName="TRI_ORCA_ORCAMENTOS" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Fill" GenerateShortCommands="false" GeneratorSourceName="Fill" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT * FROM TRI_ORCA_ORCAMENTOS</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID_ORCAMENTO" DataSetColumn="ID_ORCAMENTO" />
              <Mapping SourceColumn="ID_CLIENTE" DataSetColumn="ID_CLIENTE" />
              <Mapping SourceColumn="DT_EMISSAO" DataSetColumn="DT_EMISSAO" />
              <Mapping SourceColumn="ID_FORNEC_TRANSP" DataSetColumn="ID_FORNEC_TRANSP" />
              <Mapping SourceColumn="DT_VALIDADE" DataSetColumn="DT_VALIDADE" />
              <Mapping SourceColumn="ID_PARCELA" DataSetColumn="ID_PARCELA" />
              <Mapping SourceColumn="ID_USER" DataSetColumn="ID_USER" />
              <Mapping SourceColumn="STATUS" DataSetColumn="STATUS" />
              <Mapping SourceColumn="SUBTOTAL" DataSetColumn="SUBTOTAL" />
              <Mapping SourceColumn="DESCONTO_TOTAL" DataSetColumn="DESCONTO_TOTAL" />
              <Mapping SourceColumn="DT_ENTREGA" DataSetColumn="DT_ENTREGA" />
              <Mapping SourceColumn="VALOR_TOTAL" DataSetColumn="VALOR_TOTAL" />
              <Mapping SourceColumn="DT_VENCIMENTO" DataSetColumn="DT_VENCIMENTO" />
              <Mapping SourceColumn="VALOR_FRETE" DataSetColumn="VALOR_FRETE" />
              <Mapping SourceColumn="NOME_SOLICITANTE" DataSetColumn="NOME_SOLICITANTE" />
              <Mapping SourceColumn="OBSERVACOES" DataSetColumn="OBSERVACOES" />
              <Mapping SourceColumn="ID_CAIXA" DataSetColumn="ID_CAIXA" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="FDBConnString (Settings)" DbObjectName="&quot;SP_TRI_ORCA_GETBY_ORCA&quot;" DbObjectType="StoredProcedure" FillMethodModifier="Public" FillMethodName="FillByOrca" GenerateMethods="Fill" GenerateShortCommands="true" GeneratorSourceName="FillByOrca" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="FillByOrca">
                <SelectCommand>
                  <DbCommand CommandType="StoredProcedure" ModifiedByUser="false">
                    <CommandText>"SP_TRI_ORCA_GETBY_ORCA"</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="PID_ORCAMENTO" Precision="0" Scale="0" Size="4" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="FDBConnString (Settings)" DbObjectName="&quot;SP_TRI_ORCA_GETBY_ORCASTATUS&quot;" DbObjectType="StoredProcedure" FillMethodModifier="Public" FillMethodName="FillByOrcaStatus" GenerateMethods="Fill" GenerateShortCommands="true" GeneratorSourceName="FillByOrcaStatus" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="FillByOrcaStatus">
                <SelectCommand>
                  <DbCommand CommandType="StoredProcedure" ModifiedByUser="false">
                    <CommandText>"SP_TRI_ORCA_GETBY_ORCASTATUS"</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="PID_ORCAMENTO" Precision="0" Scale="0" Size="4" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="PSTATUS" Precision="0" Scale="0" Size="32" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="FDBConnString (Settings)" DbObjectName="&quot;SP_TRI_ORCA_FECHAORCA&quot;" DbObjectType="StoredProcedure" GenerateShortCommands="true" GeneratorSourceName="SP_TRI_ORCA_FECHAORCA" Modifier="Public" Name="SP_TRI_ORCA_FECHAORCA" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy2" UserSourceName="SP_TRI_ORCA_FECHAORCA">
                <SelectCommand>
                  <DbCommand CommandType="StoredProcedure" ModifiedByUser="false">
                    <CommandText>"SP_TRI_ORCA_FECHAORCA"</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="PID_ORCAMENTO" Precision="0" Scale="0" Size="4" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="PID_CUPOM" Precision="0" Scale="0" Size="4" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="PID_CAIXA" Precision="0" Scale="0" Size="2" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TRI_PDV_ORCA_CUPOM_RELTableAdapter" GeneratorDataComponentClassName="TRI_PDV_ORCA_CUPOM_RELTableAdapter" Name="TRI_PDV_ORCA_CUPOM_REL" UserDataComponentName="TRI_PDV_ORCA_CUPOM_RELTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="FDBConnString (Settings)" DbObjectName="TRI_PDV_ORCA_CUPOM_REL" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Fill" GenerateShortCommands="false" GeneratorSourceName="Fill" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT * FROM TRI_PDV_ORCA_CUPOM_REL</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID_ORCAMENTO" DataSetColumn="ID_ORCAMENTO" />
              <Mapping SourceColumn="ID_CUPOM" DataSetColumn="ID_CUPOM" />
              <Mapping SourceColumn="TS_INCLUSAO" DataSetColumn="TS_INCLUSAO" />
              <Mapping SourceColumn="ID_CAIXA" DataSetColumn="ID_CAIXA" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="FDBConnString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="A_ORCA_CRIATABELAS" Modifier="Public" Name="A_ORCA_CRIATABELAS" QueryType="Scalar" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="A_ORCA_CRIATABELAS">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>CREATE OR ALTER PROCEDURE SP_TRI_ORCA_CRIATABELAS
RETURNS (
erro VARCHAR(64)
)
AS
BEGIN

erro = 'create gen_tri_orca';
if (NOT exists(SELECT 1 FROM RDB$GENERATORS WHERE RDB$Generator_name= 'GEN_TRI_ORCA'))
then
EXECUTE STATEMENT 'CREATE GENERATOR GEN_TRI_ORCA;';

erro = 'create gen_tri_orca_item_id';
if (NOT exists(SELECT 1 FROM RDB$GENERATORS WHERE RDB$Generator_name= 'GEN_TRI_ORCA_ITEM_ID'))
then
EXECUTE STATEMENT 'CREATE GENERATOR GEN_TRI_ORCA_ITEM_ID;';

erro = 'create tri_orca_produtos';
if (not exists(select 1 from RDB$RELATIONS where rdb$relation_name = 'TRI_ORCA_PRODUTOS'))
then
EXECUTE STATEMENT 'CREATE TABLE TRI_ORCA_PRODUTOS ( ID_PRODUTO INTEGER NOT NULL, ID_ESTOQUE INTEGER NOT NULL, QUANT NUMERIC(18,4) NOT NULL, VALOR NUMERIC(18,4) NOT NULL, DESCONTO NUMERIC(18,4) NOT NULL, VALOR_TOT NUMERIC(18,4) NOT NULL, ID_ORCAMENTO INTEGER NOT NULL, CONSTRAINT TRI_ORCA_PRODUTOS_PK PRIMARY KEY (ID_PRODUTO) ) ;';

erro = 'create tri_orca_orcamentos';
if (not exists(select 1 from RDB$RELATIONS where rdb$relation_name = 'TRI_ORCA_ORCAMENTOS'))
then
EXECUTE STATEMENT 'CREATE TABLE TRI_ORCA_ORCAMENTOS ( ID_ORCAMENTO INTEGER NOT NULL , ID_CLIENTE INTEGER , DT_EMISSAO DATE , ID_FORNEC_TRANSP INTEGER , DT_VALIDADE DATE , ID_PARCELA SMALLINT , ID_USER INTEGER , STATUS VARCHAR(32) , SUBTOTAL NUMERIC(18,4) , DESCONTO_TOTAL NUMERIC(18,4) , DT_ENTREGA DATE , VALOR_TOTAL NUMERIC(18,4) , DT_VENCIMENTO DATE , VALOR_FRETE NUMERIC(18,4) , NOME_SOLICITANTE VARCHAR(35) , OBSERVACOES VARCHAR(200) , ID_CAIXA INTEGER NOT NULL , CONSTRAINT TRI_ORCA_ORCAMENTOS_PK PRIMARY KEY (ID_ORCAMENTO) ) ;';

erro = 'create tri_pdv_setup';
if (not exists(select 1 from RDB$RELATIONS where rdb$relation_name = 'TRI_PDV_SETUP'))
then
EXECUTE STATEMENT 'CREATE TABLE TRI_PDV_SETUP ( ID_DUMMY SMALLINT DEFAULT 1, EXECUCAO SMALLINT DEFAULT 0, VERSAO VARCHAR(36) NOT NULL, ULTIMA_AT DATE NOT NULL, DT_INSTALACAO DATE NOT NULL, ULTIMA_SYNC TIMESTAMP, ORIGEM VARCHAR(8), DESC_MAX_OP DOUBLE PRECISION DEFAULT 0 NOT NULL, VERSAO_ORCA VARCHAR(36) NOT NULL ) ; ';

erro = 'create tri_orca_config';
if (not exists(select 1 from RDB$RELATIONS where rdb$relation_name = 'TRI_ORCA_CONFIG'))
then
EXECUTE STATEMENT 'CREATE TABLE TRI_ORCA_CONFIG ( ID_MAC VARCHAR(12) NOT NULL, NO_CAIXA SMALLINT NOT NULL, CONSTRAINT TRI_ORCA_CONFIG_PK PRIMARY KEY (ID_MAC) ) ;';

erro = 'create tri_pdv_orca_cupom_rel';
if (not exists(select 1 from RDB$RELATIONS where rdb$relation_name = 'TRI_PDV_ORCA_CUPOM_REL'))
then
EXECUTE STATEMENT 'CREATE TABLE TRI_PDV_ORCA_CUPOM_REL ( ID_ORCAMENTO INTEGER NOT NULL, ID_CUPOM INTEGER NOT NULL, TS_INCLUSAO TIMESTAMP, ID_CAIXA SMALLINT, CONSTRAINT TRI_PDV_ORCA_CUPOM_REL_PK PRIMARY KEY (ID_ORCAMENTO,ID_CUPOM) ) ;';

erro = 'deu certo';
SUSPEND;
WHEN ANY DO
BEGIN

END
END;</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="FDBConnString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="B_ORCA_ATUALIZATABELAS" Modifier="Public" Name="B_ORCA_ATUALIZATABELAS" QueryType="Scalar" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="B_ORCA_ATUALIZATABELAS">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>CREATE OR ALTER PROCEDURE SP_TRI_ORCA_ATUALIZATABELAS 
RETURNS( erro VARCHAR( 64 )) AS BEGIN 

erro = 'add tri_pdv_setup.versao_orca';
IF( NOT EXISTS( SELECT 1
FROM RDB$RELATION_FIELDS
WHERE RDB$RELATION_NAME = 'TRI_PDV_SETUP'
AND RDB$FIELD_NAME = 'VERSAO_ORCA' )) THEN EXECUTE STATEMENT 'ALTER TABLE TRI_PDV_SETUP ADD VERSAO_ORCA VARCHAR(36) DEFAULT '''' NOT NULL;';

erro = 'add tri_orca_produtos.num_produto';
IF( NOT EXISTS( SELECT 1
FROM RDB$RELATION_FIELDS
WHERE RDB$RELATION_NAME = 'TRI_ORCA_PRODUTOS'
AND RDB$FIELD_NAME = 'NUM_PRODUTO' )) THEN EXECUTE STATEMENT 'ALTER TABLE TRI_ORCA_PRODUTOS ADD NUM_PRODUTO INTEGER DEFAULT 0 NOT NULL;';

erro = 'deu certo';

SUSPEND;
WHEN ANY DO BEGIN
END
END;</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="FDBConnString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="D_ORCA_PROCEDURES_1" Modifier="Public" Name="D_ORCA_PROCEDURES_1" QueryType="Scalar" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy2" UserSourceName="D_ORCA_PROCEDURES_1">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>CREATE OR ALTER PROCEDURE SP_TRI_ORCA_PROCEDURES
RETURNS (
erro VARCHAR(64)
)
AS
BEGIN

erro = 'sp_tri_orca_lancaitem';
EXECUTE STATEMENT 'CREATE OR ALTER PROCEDURE SP_TRI_ORCA_LANCAITEM ( pORCAMENTO INTEGER , pDESCONTO_ABS TYPE OF COLUMN TRI_ORCA_PRODUTOS.DESCONTO , pID_PROD INTEGER , pQTD_PROD TYPE OF COLUMN TRI_ORCA_PRODUTOS.QUANT , pVLR_PROD TYPE OF COLUMN TRI_ORCA_PRODUTOS.VALOR , pNUM_PRODUTO TYPE OF COLUMN TRI_ORCA_PRODUTOS.NUM_PRODUTO , pVALOR_TOT TYPE OF COLUMN TRI_ORCA_PRODUTOS.VALOR_TOT ) AS DECLARE VARIABLE IDORCAMENTO INTEGER; BEGIN SELECT NEXT VALUE FOR GEN_TRI_ORCA_ITEM_ID FROM RDB$DATABASE INTO :IDORCAMENTO ; IF(IDORCAMENTO IS NULL) THEN IDORCAMENTO = 0; INSERT INTO TRI_ORCA_PRODUTOS (ID_PRODUTO , ID_ESTOQUE , QUANT , VALOR , DESCONTO , ID_ORCAMENTO , VALOR_TOT , NUM_PRODUTO ) VALUES (:IDORCAMENTO , :pID_PROD , :pQTD_PROD , :pVLR_PROD , :pDESCONTO_ABS , :pORCAMENTO , :pVALOR_TOT , :pNUM_PRODUTO ) ; SUSPEND; END;';

erro = 'sp_tri_orca_reserv';
EXECUTE STATEMENT 'CREATE OR ALTER PROCEDURE SP_TRI_ORCA_RESERV ( pID_USER SMALLINT , pID_CAIXA INTEGER ) RETURNS ( CUPOMUSAVEL INTEGER ) AS DECLARE VARIABLE ULTIMOCUPOM INTEGER; BEGIN SELECT COALESCE(MAX(ID_ORCAMENTO), -1) FROM TRI_ORCA_ORCAMENTOS WHERE ID_CAIXA = :pID_CAIXA AND STATUS =''EDITANDO'' INTO :ULTIMOCUPOM ; IF (ULTIMOCUPOM &lt; 0) THEN BEGIN SELECT NEXT VALUE FOR GEN_TRI_ORCA FROM RDB$DATABASE INTO :ultimocupom ; IF(:ultimocupom IS NULL) THEN ultimocupom = 0; INSERT INTO TRI_ORCA_ORCAMENTOS (ID_ORCAMENTO , ID_CLIENTE , DT_EMISSAO , ID_FORNEC_TRANSP , DT_VALIDADE , ID_PARCELA , ID_USER , STATUS , SUBTOTAL , DESCONTO_TOTAL , DT_ENTREGA , VALOR_TOTAL , DT_VENCIMENTO , VALOR_FRETE , NOME_SOLICITANTE , OBSERVACOES , ID_CAIXA ) VALUES (:ultimocupom , 0 , current_timestamp , 0 , null , 1 , :pID_USER , ''EDITANDO'' , 0 , 0 , null , 0 , null , 0 , null , null , :pID_CAIXA ) ; END cupomusavel = ultimocupom; SUSPEND; END;';

erro = 'sp_tri_orca_salvaorca';
EXECUTE STATEMENT 'CREATE OR ALTER PROCEDURE SP_TRI_ORCA_SALVAORCA ( pID_ORCAMENTO INTEGER , pID_CLIENTE INTEGER , pID_FORNEC_TRANSP INTEGER , pDT_VALIDADE DATE , pID_PARCELA TYPE OF COLUMN TRI_ORCA_ORCAMENTOS.ID_PARCELA , pSUBTOTAL TYPE OF COLUMN TRI_ORCA_ORCAMENTOS.SUBTOTAL , pDESCONTO_TOTAL TYPE OF COLUMN TRI_ORCA_ORCAMENTOS.DESCONTO_TOTAL , pVALOR_TOTAL TYPE OF COLUMN TRI_ORCA_ORCAMENTOS.VALOR_TOTAL , pDT_ENTREGA DATE , pDT_VENCIMENTO DATE , pVALOR_FRETE TYPE OF COLUMN TRI_ORCA_ORCAMENTOS.VALOR_FRETE , pNOME_SOLICITANTE TYPE OF COLUMN TRI_ORCA_ORCAMENTOS.NOME_SOLICITANTE , pOBSERVACOES TYPE OF COLUMN TRI_ORCA_ORCAMENTOS.OBSERVACOES ) AS BEGIN UPDATE TRI_ORCA_ORCAMENTOS SET ID_CLIENTE =:pID_CLIENTE , DT_EMISSAO =current_timestamp , ID_FORNEC_TRANSP =:pID_FORNEC_TRANSP , DT_VALIDADE =:pDT_VALIDADE , ID_PARCELA =:pID_PARCELA , STATUS =''SALVO'' , SUBTOTAL =:pSUBTOTAL , DESCONTO_TOTAL =:pDESCONTO_TOTAL , DT_ENTREGA =:pDT_ENTREGA , VALOR_TOTAL =:pVALOR_TOTAL , DT_VENCIMENTO =:pDT_VENCIMENTO , VALOR_FRETE =:pVALOR_FRETE , NOME_SOLICITANTE =:pNOME_SOLICITANTE , OBSERVACOES =:pOBSERVACOES WHERE ID_ORCAMENTO = :pID_ORCAMENTO ; END;';

erro = 'sp_tri_orca_getby_orca';
EXECUTE STATEMENT 'CREATE OR ALTER PROCEDURE SP_TRI_ORCA_GETBY_ORCA ( pID_ORCAMENTO INTEGER ) RETURNS ( ID_ORCAMENTO INTEGER , ID_CLIENTE INTEGER , DT_EMISSAO DATE , ID_FORNEC_TRANSP INTEGER , DT_VALIDADE DATE , ID_PARCELA TYPE OF COLUMN TRI_ORCA_ORCAMENTOS.ID_PARCELA , ID_USER INTEGER , STATUS TYPE OF COLUMN TRI_ORCA_ORCAMENTOS.STATUS , SUBTOTAL TYPE OF COLUMN TRI_ORCA_ORCAMENTOS.SUBTOTAL , DESCONTO_TOTAL TYPE OF COLUMN TRI_ORCA_ORCAMENTOS.DESCONTO_TOTAL , DT_ENTREGA DATE , VALOR_TOTAL TYPE OF COLUMN TRI_ORCA_ORCAMENTOS.VALOR_TOTAL , DT_VENCIMENTO DATE , VALOR_FRETE TYPE OF COLUMN TRI_ORCA_ORCAMENTOS.VALOR_FRETE , NOME_SOLICITANTE TYPE OF COLUMN TRI_ORCA_ORCAMENTOS.NOME_SOLICITANTE , OBSERVACOES TYPE OF COLUMN TRI_ORCA_ORCAMENTOS.OBSERVACOES , ID_CAIXA TYPE OF COLUMN TRI_ORCA_ORCAMENTOS.ID_CAIXA ) AS BEGIN for SELECT ID_ORCAMENTO , ID_CLIENTE , DT_EMISSAO , ID_FORNEC_TRANSP , DT_VALIDADE , ID_PARCELA , ID_USER , STATUS , SUBTOTAL , DESCONTO_TOTAL , DT_ENTREGA , VALOR_TOTAL , DT_VENCIMENTO , VALOR_FRETE , NOME_SOLICITANTE , OBSERVACOES , ID_CAIXA FROM TRI_ORCA_ORCAMENTOS WHERE ID_ORCAMENTO = :pID_ORCAMENTO INTO :ID_ORCAMENTO , :ID_CLIENTE , :DT_EMISSAO , :ID_FORNEC_TRANSP , :DT_VALIDADE , :ID_PARCELA , :ID_USER , :STATUS , :SUBTOTAL , :DESCONTO_TOTAL , :DT_ENTREGA , :VALOR_TOTAL , :DT_VENCIMENTO , :VALOR_FRETE , :NOME_SOLICITANTE , :OBSERVACOES , :ID_CAIXA DO BEGIN SUSPEND ; END END;';

erro = 'sp_tri_rel_orca_emit';
execute statement 'CREATE OR ALTER PROCEDURE SP_TRI_REL_ORCA_EMIT RETURNS ( LOGO TYPE OF COLUMN TB_EMITENTE.LOGO , NOME TYPE OF COLUMN TB_EMITENTE.NOME , NOME_FANTA TYPE OF COLUMN TB_EMITENTE.NOME_FANTA , CNPJ TYPE OF COLUMN TB_EMITENTE.CNPJ , INSC_ESTAD TYPE OF COLUMN TB_EMITENTE.INSC_ESTAD , END_TIPO TYPE OF COLUMN TB_EMITENTE.END_TIPO , END_LOGRAD TYPE OF COLUMN TB_EMITENTE.END_LOGRAD , END_COMPLE TYPE OF COLUMN TB_EMITENTE.END_COMPLE , END_NUMERO TYPE OF COLUMN TB_EMITENTE.END_NUMERO , END_BAIRRO TYPE OF COLUMN TB_EMITENTE.END_BAIRRO , DDD_COMER TYPE OF COLUMN TB_EMITENTE.DDD_COMER , FONE_COMER TYPE OF COLUMN TB_EMITENTE.FONE_COMER , END_CEP TYPE OF COLUMN TB_EMITENTE.END_CEP , CIDADE_NOME TYPE OF COLUMN TB_CIDADE_SIS.NOME , SIGLA_UF TYPE OF COLUMN TB_CIDADE_SIS.SIGLA_UF , SITE TYPE OF COLUMN TB_EMITENTE.SITE ) AS BEGIN for SELECT a.LOGO , a.NOME , a.NOME_FANTA , a.CNPJ , a.INSC_ESTAD , a.END_TIPO , a.END_LOGRAD , a.END_COMPLE , a.END_NUMERO , a.END_BAIRRO , a.DDD_COMER , a.FONE_COMER , a.END_CEP , b.NOME AS CIDADE_NOME , b.SIGLA_UF , a.SITE FROM TB_EMITENTE a JOIN TB_CIDADE_SIS b ON b.ID_CIDADE = a.ID_CIDADE INTO :LOGO , :NOME , :NOME_FANTA , :CNPJ , :INSC_ESTAD , :END_TIPO , :END_LOGRAD , :END_COMPLE , :END_NUMERO , :END_BAIRRO , :DDD_COMER , :FONE_COMER , :END_CEP , :CIDADE_NOME , :SIGLA_UF , :SITE DO BEGIN SUSPEND ; END END;';

erro = 'sp_tri_rel_orca_orcamento';
execute statement 'CREATE OR ALTER PROCEDURE SP_TRI_REL_ORCA_ORCAMENTO ( pID_ORCAMENTO TYPE OF COLUMN TRI_ORCA_ORCAMENTOS.ID_ORCAMENTO ) RETURNS ( ID_ORCAMENTO TYPE OF COLUMN TRI_ORCA_ORCAMENTOS.ID_ORCAMENTO ,DT_EMISSAO TYPE OF COLUMN TRI_ORCA_ORCAMENTOS.DT_EMISSAO , TRANSPORTADORA_NOME TYPE OF COLUMN TB_FORNECEDOR.NOME , DT_VALIDADE TYPE OF COLUMN TRI_ORCA_ORCAMENTOS.DT_VALIDADE , PARCELA_DESCRICAO TYPE OF COLUMN TB_PARCELAMENTO.DESCRICAO , USERNAME TYPE OF COLUMN TRI_PDV_USERS.USERNAME , SUBTOTAL TYPE OF COLUMN TRI_ORCA_ORCAMENTOS.SUBTOTAL , DESCONTO_TOTAL TYPE OF COLUMN TRI_ORCA_ORCAMENTOS.DESCONTO_TOTAL , DT_ENTREGA TYPE OF COLUMN TRI_ORCA_ORCAMENTOS.DT_ENTREGA , VALOR_TOTAL TYPE OF COLUMN TRI_ORCA_ORCAMENTOS.VALOR_TOTAL , DT_VENCIMENTO TYPE OF COLUMN TRI_ORCA_ORCAMENTOS.DT_VENCIMENTO , VALOR_FRETE TYPE OF COLUMN TRI_ORCA_ORCAMENTOS.VALOR_FRETE , NOME_SOLICITANTE TYPE OF COLUMN TRI_ORCA_ORCAMENTOS.NOME_SOLICITANTE , OBSERVACOES TYPE OF COLUMN TRI_ORCA_ORCAMENTOS.OBSERVACOES ) AS BEGIN for SELECT a.ID_ORCAMENTO , a.DT_EMISSAO , c.NOME AS TRANSPORTADORA_NOME , a.DT_VALIDADE , d.DESCRICAO AS PARCELA_DESCRICAO , b.USERNAME , a.SUBTOTAL , a.DESCONTO_TOTAL , a.DT_ENTREGA , a.VALOR_TOTAL , a.DT_VENCIMENTO , a.VALOR_FRETE , a.NOME_SOLICITANTE , a.OBSERVACOES FROM TRI_ORCA_ORCAMENTOS a LEFT JOIN TRI_PDV_USERS b ON b.ID_USER = a.ID_USER LEFT JOIN TB_FORNECEDOR c ON c.ID_FORNEC = a.ID_FORNEC_TRANSP LEFT JOIN TB_PARCELAMENTO d ON d.ID_PARCELA = a.ID_PARCELA WHERE a.ID_ORCAMENTO = :pID_ORCAMENTO INTO :ID_ORCAMENTO , :DT_EMISSAO , :TRANSPORTADORA_NOME , :DT_VALIDADE , :PARCELA_DESCRICAO , :USERNAME , :SUBTOTAL , :DESCONTO_TOTAL , :DT_ENTREGA , :VALOR_TOTAL , :DT_VENCIMENTO , :VALOR_FRETE , :NOME_SOLICITANTE , :OBSERVACOES DO BEGIN SUSPEND ; END END;';

erro = 'sp_tri_rel_orca_solicitante';
execute statement 'CREATE OR ALTER PROCEDURE SP_TRI_REL_ORCA_SOLICITANTE ( pID_ORCAMENTO TYPE OF COLUMN TRI_ORCA_ORCAMENTOS.ID_ORCAMENTO ) RETURNS ( CLIENTE_NOME TYPE OF COLUMN TB_CLIENTE.NOME , CLIENTE_NOME_FANTA TYPE OF COLUMN TB_CLI_PJ.NOME_FANTA , CLIENTE_CPF TYPE OF COLUMN TB_CLI_PF.CPF , CLIENTE_CNPJ TYPE OF COLUMN TB_CLI_PJ.CNPJ , CLIENTE_RG TYPE OF COLUMN TB_CLI_PF.IDENTIDADE , INSC_ESTAD TYPE OF COLUMN TB_CLI_PJ.INSC_ESTAD , INSC_MUNIC TYPE OF COLUMN TB_CLI_PJ.INSC_MUNIC , END_TIPO TYPE OF COLUMN TB_CLIENTE.END_TIPO , END_LOGRAD TYPE OF COLUMN TB_CLIENTE.END_LOGRAD , END_NUMERO TYPE OF COLUMN TB_CLIENTE.END_NUMERO , END_COMPLE TYPE OF COLUMN TB_CLIENTE.END_COMPLE , END_BAIRRO TYPE OF COLUMN TB_CLIENTE.END_BAIRRO , END_CEP TYPE OF COLUMN TB_CLIENTE.END_CEP , CIDADE_NOME TYPE OF COLUMN TB_CIDADE_SIS.NOME , SIGLA_UF TYPE OF COLUMN TB_CIDADE_SIS.SIGLA_UF , DDD_COMER TYPE OF COLUMN TB_CLIENTE.DDD_COMER , FONE_COMER TYPE OF COLUMN TB_CLIENTE.FONE_COMER , DDD_FAX TYPE OF COLUMN TB_CLIENTE.DDD_FAX , FONE_FAX TYPE OF COLUMN TB_CLIENTE.FONE_FAX , DDD_CELUL TYPE OF COLUMN TB_CLIENTE.DDD_CELUL , FONE_CELUL TYPE OF COLUMN TB_CLIENTE.FONE_CELUL , DDD_RESID TYPE OF COLUMN TB_CLIENTE.DDD_RESID , FONE_RESID TYPE OF COLUMN TB_CLIENTE.FONE_RESID , EMAIL_CONT TYPE OF COLUMN TB_CLIENTE.EMAIL_CONT ) AS BEGIN for SELECT b.NOME AS CLIENTE_NOME , e.NOME_FANTA AS CLIENTE_NOME_FANTA , d.CPF AS CLIENTE_CPF , e.CNPJ AS CLIENTE_CNPJ , d.IDENTIDADE AS CLIENTE_RG , e.INSC_ESTAD , e.INSC_MUNIC , b.END_TIPO , b.END_LOGRAD , b.END_NUMERO , b.END_COMPLE , b.END_BAIRRO , b.END_CEP , c.NOME AS CIDADE_NOME , c.SIGLA_UF , b.DDD_COMER , b.FONE_COMER , b.DDD_FAX , b.FONE_FAX , b.DDD_CELUL , b.FONE_CELUL , b.DDD_RESID , b.FONE_RESID , b.EMAIL_CONT FROM TRI_ORCA_ORCAMENTOS a JOIN TB_CLIENTE b ON b.ID_CLIENTE = a.ID_CLIENTE LEFT JOIN TB_CIDADE_SIS c ON c.ID_CIDADE = b.ID_CIDADE LEFT JOIN TB_CLI_PF d ON d.ID_CLIENTE = b.ID_CLIENTE LEFT JOIN TB_CLI_PJ e ON e.ID_CLIENTE = b.ID_CLIENTE WHERE a.ID_ORCAMENTO = :pID_ORCAMENTO INTO :CLIENTE_NOME , :CLIENTE_NOME_FANTA , :CLIENTE_CPF , :CLIENTE_CNPJ , :CLIENTE_RG , :INSC_ESTAD , :INSC_MUNIC , :END_TIPO , :END_LOGRAD , :END_NUMERO , :END_COMPLE , :END_BAIRRO , :END_CEP , :CIDADE_NOME , :SIGLA_UF , :DDD_COMER , :FONE_COMER , :DDD_FAX , :FONE_FAX , :DDD_CELUL , :FONE_CELUL , :DDD_RESID , :FONE_RESID , :EMAIL_CONT DO BEGIN SUSPEND ; END END;';

erro = 'sp_tri_rel_orca_orcamento_item';
execute statement 'CREATE OR ALTER PROCEDURE SP_TRI_REL_ORCA_ORCAMENTO_ITEM ( pID_ORCAMENTO TYPE OF COLUMN TRI_ORCA_ORCAMENTOS.ID_ORCAMENTO ) RETURNS ( ID_PRODUTO TYPE OF COLUMN TRI_ORCA_PRODUTOS.ID_PRODUTO , ID_IDENTIF_ORCAPROD TYPE OF COLUMN TRI_ORCA_PRODUTOS.ID_ESTOQUE , COD_BARRA TYPE OF COLUMN TB_EST_PRODUTO.COD_BARRA , EST_DESCRICAO TYPE OF COLUMN TB_ESTOQUE.DESCRICAO , QUANT TYPE OF COLUMN TRI_ORCA_PRODUTOS.QUANT , EST_UNI_MEDIDA TYPE OF COLUMN TB_ESTOQUE.UNI_MEDIDA , VALOR TYPE OF COLUMN TRI_ORCA_PRODUTOS.VALOR , DESCONTO TYPE OF COLUMN TRI_ORCA_PRODUTOS.DESCONTO , VALOR_TOT TYPE OF COLUMN TRI_ORCA_PRODUTOS.VALOR_TOT , NUM_PRODUTO TYPE OF COLUMN TRI_ORCA_PRODUTOS.NUM_PRODUTO ) AS BEGIN for SELECT a.ID_PRODUTO , a.ID_ESTOQUE AS ID_IDENTIF_ORCAPROD , b.COD_BARRA , d.DESCRICAO AS EST_DESCRICAO , a.QUANT , d.UNI_MEDIDA AS EST_UNI_MEDIDA , a.VALOR , a.DESCONTO , a.VALOR_TOT , a.NUM_PRODUTO FROM TRI_ORCA_PRODUTOS a JOIN TB_EST_IDENTIFICADOR c ON c.ID_IDENTIFICADOR = a.ID_ESTOQUE JOIN TB_EST_PRODUTO b ON b.ID_IDENTIFICADOR = c.ID_IDENTIFICADOR JOIN TB_ESTOQUE d ON d.ID_ESTOQUE = c.ID_ESTOQUE WHERE a.ID_ORCAMENTO = :pID_ORCAMENTO INTO :ID_PRODUTO , :ID_IDENTIF_ORCAPROD , :COD_BARRA , :EST_DESCRICAO , :QUANT , :EST_UNI_MEDIDA , :VALOR , :DESCONTO , :VALOR_TOT , :NUM_PRODUTO DO BEGIN SUSPEND ; END END;';

erro = 'sp_tri_cidade_getby_id';
EXECUTE STATEMENT 'CREATE OR ALTER PROCEDURE SP_TRI_CIDADE_GETBY_ID ( pID_CIDADE TYPE OF COLUMN TB_CIDADE_SIS.ID_CIDADE ) RETURNS ( ID_CIDADE TYPE OF COLUMN TB_CIDADE_SIS.ID_CIDADE , NOME TYPE OF COLUMN TB_CIDADE_SIS.NOME , SIGLA_UF TYPE OF COLUMN TB_CIDADE_SIS.SIGLA_UF , DDD TYPE OF COLUMN TB_CIDADE_SIS.DDD , CODIGO_SIAFI TYPE OF COLUMN TB_CIDADE_SIS.CODIGO_SIAFI , CODIGO_SEDETEC TYPE OF COLUMN TB_CIDADE_SIS.CODIGO_SEDETEC ) AS BEGIN FOR SELECT ID_CIDADE , NOME , SIGLA_UF , DDD , CODIGO_SIAFI , CODIGO_SEDETEC FROM TB_CIDADE_SIS WHERE ID_CIDADE = :pID_CIDADE INTO :ID_CIDADE , :NOME , :SIGLA_UF , :DDD , :CODIGO_SIAFI , :CODIGO_SEDETEC DO BEGIN SUSPEND ; END END;';

erro = 'sp_tri_fornec_getby_transp';
EXECUTE STATEMENT 'CREATE OR ALTER PROCEDURE SP_TRI_FORNEC_GETBY_TRANSP RETURNS ( ID_FORNEC TYPE OF COLUMN TB_FORNECEDOR.ID_FORNEC , NOME TYPE OF COLUMN TB_FORNECEDOR.NOME , NOME_FANTA TYPE OF COLUMN TB_FORNECEDOR.NOME_FANTA , CNPJ TYPE OF COLUMN TB_FORNECEDOR.CNPJ , INSC_ESTAD TYPE OF COLUMN TB_FORNECEDOR.INSC_ESTAD , INSC_MUNIC TYPE OF COLUMN TB_FORNECEDOR.INSC_MUNIC , END_CEP TYPE OF COLUMN TB_FORNECEDOR.END_CEP , END_TIPO TYPE OF COLUMN TB_FORNECEDOR.END_TIPO , END_LOGRAD TYPE OF COLUMN TB_FORNECEDOR.END_LOGRAD , END_BAIRRO TYPE OF COLUMN TB_FORNECEDOR.END_BAIRRO , END_NUMERO TYPE OF COLUMN TB_FORNECEDOR.END_NUMERO , END_COMPLE TYPE OF COLUMN TB_FORNECEDOR.END_COMPLE , DDD_COMER TYPE OF COLUMN TB_FORNECEDOR.DDD_COMER , FONE_COMER TYPE OF COLUMN TB_FORNECEDOR.FONE_COMER , FONE_0800 TYPE OF COLUMN TB_FORNECEDOR.FONE_0800 , DDD_CELUL TYPE OF COLUMN TB_FORNECEDOR.DDD_CELUL , FONE_CELUL TYPE OF COLUMN TB_FORNECEDOR.FONE_CELUL , DDD_FAX TYPE OF COLUMN TB_FORNECEDOR.DDD_FAX , FONE_FAX TYPE OF COLUMN TB_FORNECEDOR.FONE_FAX , EMAIL_CONT TYPE OF COLUMN TB_FORNECEDOR.EMAIL_CONT , EMAIL_NFE TYPE OF COLUMN TB_FORNECEDOR.EMAIL_NFE , SITE TYPE OF COLUMN TB_FORNECEDOR.SITE , STATUS TYPE OF COLUMN TB_FORNECEDOR.STATUS , DT_PRICOMP TYPE OF COLUMN TB_FORNECEDOR.DT_PRICOMP , DT_ULTCOMP TYPE OF COLUMN TB_FORNECEDOR.DT_ULTCOMP , ID_CIDADE TYPE OF COLUMN TB_FORNECEDOR.ID_CIDADE , LIMITE TYPE OF COLUMN TB_FORNECEDOR.LIMITE , ID_RAMO TYPE OF COLUMN TB_FORNECEDOR.ID_RAMO , ID_PAIS TYPE OF COLUMN TB_FORNECEDOR.ID_PAIS , OBSERVACAO TYPE OF COLUMN TB_FORNECEDOR.OBSERVACAO , CONTATO TYPE OF COLUMN TB_FORNECEDOR.CONTATO , TRI_PDV_DT_UPD TYPE OF COLUMN TB_FORNECEDOR.TRI_PDV_DT_UPD ) AS BEGIN FOR SELECT ID_FORNEC , NOME , NOME_FANTA , CNPJ , INSC_ESTAD , INSC_MUNIC , END_CEP , END_TIPO , END_LOGRAD , END_BAIRRO , END_NUMERO , END_COMPLE , DDD_COMER , FONE_COMER , FONE_0800 , DDD_CELUL , FONE_CELUL , DDD_FAX , FONE_FAX , EMAIL_CONT , EMAIL_NFE , SITE , STATUS , DT_PRICOMP , DT_ULTCOMP , ID_CIDADE , LIMITE , ID_RAMO , ID_PAIS , OBSERVACAO , CONTATO , TRI_PDV_DT_UPD FROM TB_FORNECEDOR WHERE ID_RAMO = 34 INTO :ID_FORNEC , :NOME , :NOME_FANTA , :CNPJ , :INSC_ESTAD , :INSC_MUNIC , :END_CEP , :END_TIPO , :END_LOGRAD , :END_BAIRRO , :END_NUMERO , :END_COMPLE , :DDD_COMER , :FONE_COMER , :FONE_0800 , :DDD_CELUL , :FONE_CELUL , :DDD_FAX , :FONE_FAX , :EMAIL_CONT , :EMAIL_NFE , :SITE , :STATUS , :DT_PRICOMP , :DT_ULTCOMP , :ID_CIDADE , :LIMITE , :ID_RAMO , :ID_PAIS , :OBSERVACAO , :CONTATO , :TRI_PDV_DT_UPD DO BEGIN SUSPEND ; END END;';

erro = 'sp_tri_orcaprod_getby_orca';
EXECUTE STATEMENT 'CREATE OR ALTER PROCEDURE SP_TRI_ORCAPROD_GETBY_ORCA ( pID_ORCAMENTO TYPE OF COLUMN TRI_ORCA_PRODUTOS.ID_ORCAMENTO ) RETURNS ( ID_PRODUTO TYPE OF COLUMN TRI_ORCA_PRODUTOS.ID_PRODUTO , ID_ESTOQUE TYPE OF COLUMN TRI_ORCA_PRODUTOS.ID_ESTOQUE , QUANT TYPE OF COLUMN TRI_ORCA_PRODUTOS.QUANT , VALOR TYPE OF COLUMN TRI_ORCA_PRODUTOS.VALOR , DESCONTO TYPE OF COLUMN TRI_ORCA_PRODUTOS.DESCONTO , VALOR_TOT TYPE OF COLUMN TRI_ORCA_PRODUTOS.VALOR_TOT , ID_ORCAMENTO TYPE OF COLUMN TRI_ORCA_PRODUTOS.ID_ORCAMENTO , NUM_PRODUTO TYPE OF COLUMN TRI_ORCA_PRODUTOS.NUM_PRODUTO ) AS BEGIN FOR SELECT ID_PRODUTO , ID_ESTOQUE , QUANT , VALOR , DESCONTO , VALOR_TOT , ID_ORCAMENTO , NUM_PRODUTO FROM TRI_ORCA_PRODUTOS WHERE ID_ORCAMENTO = :pID_ORCAMENTO INTO :ID_PRODUTO , :ID_ESTOQUE , :QUANT , :VALOR , :DESCONTO , :VALOR_TOT , :ID_ORCAMENTO , :NUM_PRODUTO DO BEGIN SUSPEND ; END END;';

erro = 'sp_tri_orca_itens_orcamento';
EXECUTE STATEMENT 'CREATE OR ALTER PROCEDURE SP_TRI_ORCA_ITENS_ORCAMENTO ( pID_ORCAMENTO TYPE OF COLUMN TRI_ORCA_PRODUTOS.ID_ORCAMENTO ) RETURNS ( ID_PRODUTO TYPE OF COLUMN TRI_ORCA_PRODUTOS.ID_PRODUTO , ID_EST_IDENTIFICADOR TYPE OF COLUMN TB_EST_IDENTIFICADOR.ID_IDENTIFICADOR , DESCRICAO TYPE OF COLUMN TB_ESTOQUE.DESCRICAO , QUANT TYPE OF COLUMN TRI_ORCA_PRODUTOS.QUANT , UNI_MEDIDA TYPE OF COLUMN TB_ESTOQUE.UNI_MEDIDA , VALOR TYPE OF COLUMN TRI_ORCA_PRODUTOS.VALOR , DESCONTO TYPE OF COLUMN TRI_ORCA_PRODUTOS.DESCONTO , VALOR_TOTAL TYPE OF COLUMN TRI_ORCA_PRODUTOS.VALOR_TOT , NUM_PRODUTO TYPE OF COLUMN TRI_ORCA_PRODUTOS.NUM_PRODUTO ) AS BEGIN FOR SELECT A.ID_PRODUTO , A.ID_ESTOQUE AS ID_EST_IDENTIFICADOR , C.DESCRICAO , A.QUANT , C.UNI_MEDIDA , A.VALOR , A.DESCONTO , A.VALOR_TOT AS VALOR_TOTAL , A.NUM_PRODUTO FROM TRI_ORCA_PRODUTOS A INNER JOIN TB_EST_IDENTIFICADOR B ON B.ID_IDENTIFICADOR = A.ID_ESTOQUE JOIN TB_ESTOQUE C ON C.ID_ESTOQUE = B.ID_ESTOQUE WHERE ( A.ID_ORCAMENTO = :pID_ORCAMENTO ) ORDER BY A.NUM_PRODUTO INTO :ID_PRODUTO , :ID_EST_IDENTIFICADOR , :DESCRICAO , :QUANT , :UNI_MEDIDA , :VALOR , :DESCONTO , :VALOR_TOTAL , :NUM_PRODUTO DO BEGIN SUSPEND ; END END;';

erro = 'sp_tri_orca_remove_item';
EXECUTE STATEMENT 'CREATE OR ALTER PROCEDURE SP_TRI_ORCA_REMOVE_ITEM ( pID_PRODUTO TYPE OF COLUMN TRI_ORCA_PRODUTOS.ID_PRODUTO ) AS BEGIN UPDATE TRI_ORCA_PRODUTOS SET NUM_PRODUTO = NUM_PRODUTO - 1 WHERE ID_ORCAMENTO = ( SELECT ID_ORCAMENTO FROM TRI_ORCA_PRODUTOS WHERE ID_PRODUTO = :pID_PRODUTO ) AND NUM_PRODUTO &gt; ( SELECT NUM_PRODUTO FROM TRI_ORCA_PRODUTOS WHERE ID_PRODUTO = :pID_PRODUTO ) ; DELETE FROM TRI_ORCA_PRODUTOS WHERE ID_PRODUTO = :pID_PRODUTO ; END;';

erro = 'sp_tri_orca_clientes_keyvalue';
EXECUTE STATEMENT 'CREATE OR ALTER PROCEDURE SP_TRI_ORCA_CLIENTES_KEYVALUE RETURNS ( ID_CLIENTE TYPE OF COLUMN TB_CLIENTE.ID_CLIENTE , NOME TYPE OF COLUMN TB_CLIENTE.NOME ) AS BEGIN FOR SELECT ID_CLIENTE , NOME FROM TB_CLIENTE INTO :ID_CLIENTE , :NOME DO BEGIN SUSPEND ; END END;';

erro = 'sp_tri_orca_cliente_getby_id';
EXECUTE STATEMENT 'CREATE OR ALTER PROCEDURE SP_TRI_ORCA_CLIENTE_GETBY_ID ( pID_CLIENTE TYPE OF COLUMN TB_CLIENTE.ID_CLIENTE ) RETURNS ( CLIENTE_NOME TYPE OF COLUMN TB_CLIENTE.NOME , CLIENTE_NOME_FANTA TYPE OF COLUMN TB_CLI_PJ.NOME_FANTA , CLIENTE_CPF TYPE OF COLUMN TB_CLI_PF.CPF , CLIENTE_CNPJ TYPE OF COLUMN TB_CLI_PJ.CNPJ , CLIENTE_RG TYPE OF COLUMN TB_CLI_PF.IDENTIDADE , INSC_ESTAD TYPE OF COLUMN TB_CLI_PJ.INSC_ESTAD , INSC_MUNIC TYPE OF COLUMN TB_CLI_PJ.INSC_MUNIC , END_TIPO TYPE OF COLUMN TB_CLIENTE.END_TIPO , END_LOGRAD TYPE OF COLUMN TB_CLIENTE.END_LOGRAD , END_NUMERO TYPE OF COLUMN TB_CLIENTE.END_NUMERO , END_COMPLE TYPE OF COLUMN TB_CLIENTE.END_COMPLE , END_BAIRRO TYPE OF COLUMN TB_CLIENTE.END_BAIRRO , END_CEP TYPE OF COLUMN TB_CLIENTE.END_CEP , CIDADE_NOME TYPE OF COLUMN TB_CIDADE_SIS.NOME , SIGLA_UF TYPE OF COLUMN TB_CIDADE_SIS.SIGLA_UF , DDD_COMER TYPE OF COLUMN TB_CLIENTE.DDD_COMER , FONE_COMER TYPE OF COLUMN TB_CLIENTE.FONE_COMER , DDD_FAX TYPE OF COLUMN TB_CLIENTE.DDD_FAX , FONE_FAX TYPE OF COLUMN TB_CLIENTE.FONE_FAX , DDD_CELUL TYPE OF COLUMN TB_CLIENTE.DDD_CELUL , FONE_CELUL TYPE OF COLUMN TB_CLIENTE.FONE_CELUL , DDD_RESID TYPE OF COLUMN TB_CLIENTE.DDD_RESID , FONE_RESID TYPE OF COLUMN TB_CLIENTE.FONE_RESID , EMAIL_CONT TYPE OF COLUMN TB_CLIENTE.EMAIL_CONT ) AS BEGIN for SELECT b.NOME AS CLIENTE_NOME , e.NOME_FANTA AS CLIENTE_NOME_FANTA , d.CPF AS CLIENTE_CPF , e.CNPJ AS CLIENTE_CNPJ , d.IDENTIDADE AS CLIENTE_RG , e.INSC_ESTAD , e.INSC_MUNIC , b.END_TIPO , b.END_LOGRAD , b.END_NUMERO , b.END_COMPLE , b.END_BAIRRO , b.END_CEP , c.NOME AS CIDADE_NOME , c.SIGLA_UF , b.DDD_COMER , b.FONE_COMER , b.DDD_FAX , b.FONE_FAX , b.DDD_CELUL , b.FONE_CELUL , b.DDD_RESID , b.FONE_RESID , b.EMAIL_CONT FROM TB_CLIENTE b LEFT JOIN TB_CIDADE_SIS c ON c.ID_CIDADE = b.ID_CIDADE LEFT JOIN TB_CLI_PF d ON d.ID_CLIENTE = b.ID_CLIENTE LEFT JOIN TB_CLI_PJ e ON e.ID_CLIENTE = b.ID_CLIENTE WHERE b.ID_CLIENTE = :pID_CLIENTE INTO :CLIENTE_NOME , :CLIENTE_NOME_FANTA , :CLIENTE_CPF , :CLIENTE_CNPJ , :CLIENTE_RG , :INSC_ESTAD , :INSC_MUNIC , :END_TIPO , :END_LOGRAD , :END_NUMERO , :END_COMPLE , :END_BAIRRO , :END_CEP , :CIDADE_NOME , :SIGLA_UF , :DDD_COMER , :FONE_COMER , :DDD_FAX , :FONE_FAX , :DDD_CELUL , :FONE_CELUL , :DDD_RESID , :FONE_RESID , :EMAIL_CONT DO BEGIN SUSPEND ; END END;';

erro = 'sp_tri_orca_parcelmnt_keyvalue';
EXECUTE STATEMENT 'CREATE OR ALTER PROCEDURE SP_TRI_ORCA_PARCELMNT_KEYVALUE RETURNS ( ID_PARCELA TYPE OF COLUMN TB_PARCELAMENTO.ID_PARCELA , DESCRICAO TYPE OF COLUMN TB_PARCELAMENTO.DESCRICAO ) AS BEGIN FOR SELECT ID_PARCELA , DESCRICAO FROM TB_PARCELAMENTO INTO :ID_PARCELA , :DESCRICAO DO BEGIN SUSPEND ; END END;';

erro = 'sp_tri_orca_fornec_keyvalue';
EXECUTE STATEMENT 'CREATE OR ALTER PROCEDURE SP_TRI_ORCA_FORNEC_KEYVALUE RETURNS ( ID_FORNEC TYPE OF COLUMN TB_FORNECEDOR.ID_FORNEC , NOME TYPE OF COLUMN TB_FORNECEDOR.NOME ) AS BEGIN FOR SELECT ID_FORNEC , NOME FROM TB_FORNECEDOR WHERE ID_RAMO = 34 INTO :ID_FORNEC , :NOME DO BEGIN SUSPEND ; END END;';

erro = 'sp_tri_orca_gravatotais';
EXECUTE STATEMENT 'CREATE OR ALTER PROCEDURE SP_TRI_ORCA_GRAVATOTAIS ( pID_ORCAMENTO INTEGER , pID_USER TYPE OF COLUMN TRI_ORCA_ORCAMENTOS.ID_USER , pSUBTOTAL TYPE OF COLUMN TRI_ORCA_ORCAMENTOS.SUBTOTAL , pDESCONTO_TOTAL TYPE OF COLUMN TRI_ORCA_ORCAMENTOS.DESCONTO_TOTAL , pVALOR_TOTAL TYPE OF COLUMN TRI_ORCA_ORCAMENTOS.VALOR_TOTAL , pVALOR_FRETE TYPE OF COLUMN TRI_ORCA_ORCAMENTOS.VALOR_FRETE ) AS BEGIN UPDATE TRI_ORCA_ORCAMENTOS SET ID_USER =:pID_USER , SUBTOTAL =:pSUBTOTAL , DESCONTO_TOTAL =:pDESCONTO_TOTAL , VALOR_TOTAL =:pVALOR_TOTAL , VALOR_FRETE =:pVALOR_FRETE WHERE ID_ORCAMENTO = :pID_ORCAMENTO ; END;';

erro = 'sp_tri_orca_config_upsert';
execute statement 'CREATE OR ALTER PROCEDURE SP_TRI_ORCA_CONFIG_UPSERT ( pID_MAC TYPE OF COLUMN TRI_ORCA_CONFIG.ID_MAC , pNO_CAIXA TYPE OF COLUMN TRI_ORCA_CONFIG.NO_CAIXA ) AS BEGIN UPDATE OR INSERT INTO TRI_ORCA_CONFIG (ID_MAC , NO_CAIXA ) VALUES (:pID_MAC , :pNO_CAIXA ) MATCHING (ID_MAC ) ; END;';

erro = 'sp_tri_orca_pesq_get';
execute statement 'CREATE OR ALTER PROCEDURE SP_TRI_ORCA_PESQ_GET ( pID_ORCAMENTO TYPE OF COLUMN TRI_ORCA_ORCAMENTOS.ID_ORCAMENTO ) RETURNS ( ID_ORCAMENTO TYPE OF COLUMN TRI_ORCA_ORCAMENTOS.ID_ORCAMENTO ,ID_CLIENTE TYPE OF COLUMN TRI_ORCA_ORCAMENTOS.ID_CLIENTE ,CLIENTE_NOME TYPE OF COLUMN TB_CLIENTE.NOME ,DT_EMISSAO TYPE OF COLUMN TRI_ORCA_ORCAMENTOS.DT_EMISSAO , DT_VALIDADE TYPE OF COLUMN TRI_ORCA_ORCAMENTOS.DT_VALIDADE , DT_ENTREGA TYPE OF COLUMN TRI_ORCA_ORCAMENTOS.DT_ENTREGA , DT_VENCIMENTO TYPE OF COLUMN TRI_ORCA_ORCAMENTOS.DT_VENCIMENTO , VALOR_TOTAL TYPE OF COLUMN TRI_ORCA_ORCAMENTOS.VALOR_TOTAL, STATUS TYPE OF COLUMN TRI_ORCA_ORCAMENTOS.STATUS ) AS BEGIN for SELECT a.ID_ORCAMENTO , a.ID_CLIENTE , b.NOME AS CLIENTE_NOME , a.DT_EMISSAO , a.DT_VALIDADE , a.DT_ENTREGA , a.DT_VENCIMENTO , a.VALOR_TOTAL , a.STATUS FROM TRI_ORCA_ORCAMENTOS a JOIN TB_CLIENTE b ON b.ID_CLIENTE = a.ID_CLIENTE WHERE a.ID_ORCAMENTO = :pID_ORCAMENTO INTO :ID_ORCAMENTO , :ID_CLIENTE , :CLIENTE_NOME , :DT_EMISSAO , :DT_VALIDADE , :DT_ENTREGA , :DT_VENCIMENTO , :VALOR_TOTAL , :STATUS DO BEGIN SUSPEND ; END END;';

erro = 'sp_tri_orca_pesq_getall';
execute statement 'CREATE OR ALTER PROCEDURE SP_TRI_ORCA_PESQ_GETALL RETURNS ( ID_ORCAMENTO TYPE OF COLUMN TRI_ORCA_ORCAMENTOS.ID_ORCAMENTO ,ID_CLIENTE TYPE OF COLUMN TRI_ORCA_ORCAMENTOS.ID_CLIENTE ,CLIENTE_NOME TYPE OF COLUMN TB_CLIENTE.NOME ,DT_EMISSAO TYPE OF COLUMN TRI_ORCA_ORCAMENTOS.DT_EMISSAO , DT_VALIDADE TYPE OF COLUMN TRI_ORCA_ORCAMENTOS.DT_VALIDADE , DT_ENTREGA TYPE OF COLUMN TRI_ORCA_ORCAMENTOS.DT_ENTREGA , DT_VENCIMENTO TYPE OF COLUMN TRI_ORCA_ORCAMENTOS.DT_VENCIMENTO , VALOR_TOTAL TYPE OF COLUMN TRI_ORCA_ORCAMENTOS.VALOR_TOTAL , STATUS TYPE OF COLUMN TRI_ORCA_ORCAMENTOS.STATUS ) AS BEGIN for SELECT a.ID_ORCAMENTO , a.ID_CLIENTE , b.NOME AS CLIENTE_NOME , a.DT_EMISSAO , a.DT_VALIDADE , a.DT_ENTREGA , a.DT_VENCIMENTO , a.VALOR_TOTAL , a.STATUS FROM TRI_ORCA_ORCAMENTOS a JOIN TB_CLIENTE b ON b.ID_CLIENTE = a.ID_CLIENTE INTO :ID_ORCAMENTO , :ID_CLIENTE , :CLIENTE_NOME , :DT_EMISSAO , :DT_VALIDADE , :DT_ENTREGA , :DT_VENCIMENTO , :VALOR_TOTAL , :STATUS DO BEGIN SUSPEND ; END END;';

erro = 'sp_tri_orca_pesq_by_interorca';
execute statement 'CREATE OR ALTER PROCEDURE SP_TRI_ORCA_PESQ_BY_INTERORCA ( pID_ORCAMENTO_ini TYPE OF COLUMN TRI_ORCA_ORCAMENTOS.ID_ORCAMENTO ,pID_ORCAMENTO_fin TYPE OF COLUMN TRI_ORCA_ORCAMENTOS.ID_ORCAMENTO ) RETURNS ( ID_ORCAMENTO TYPE OF COLUMN TRI_ORCA_ORCAMENTOS.ID_ORCAMENTO ,ID_CLIENTE TYPE OF COLUMN TRI_ORCA_ORCAMENTOS.ID_CLIENTE ,CLIENTE_NOME TYPE OF COLUMN TB_CLIENTE.NOME ,DT_EMISSAO TYPE OF COLUMN TRI_ORCA_ORCAMENTOS.DT_EMISSAO , DT_VALIDADE TYPE OF COLUMN TRI_ORCA_ORCAMENTOS.DT_VALIDADE , DT_ENTREGA TYPE OF COLUMN TRI_ORCA_ORCAMENTOS.DT_ENTREGA , DT_VENCIMENTO TYPE OF COLUMN TRI_ORCA_ORCAMENTOS.DT_VENCIMENTO , VALOR_TOTAL TYPE OF COLUMN TRI_ORCA_ORCAMENTOS.VALOR_TOTAL, STATUS TYPE OF COLUMN TRI_ORCA_ORCAMENTOS.STATUS ) AS BEGIN for SELECT a.ID_ORCAMENTO , a.ID_CLIENTE , b.NOME AS CLIENTE_NOME , a.DT_EMISSAO , a.DT_VALIDADE , a.DT_ENTREGA , a.DT_VENCIMENTO , a.VALOR_TOTAL , a.STATUS FROM TRI_ORCA_ORCAMENTOS a JOIN TB_CLIENTE b ON b.ID_CLIENTE = a.ID_CLIENTE WHERE ( ( ( :pID_ORCAMENTO_ini &gt; 0 AND :pID_ORCAMENTO_fin &gt; 0 ) AND ( a.ID_ORCAMENTO &gt;= :pID_ORCAMENTO_ini AND A.ID_ORCAMENTO &lt;= :pID_ORCAMENTO_fin ) ) OR ( ( :pID_ORCAMENTO_ini &gt; 0 AND :pID_ORCAMENTO_fin &lt;= 0 ) AND ( a.ID_ORCAMENTO &gt;= :pID_ORCAMENTO_ini ) ) OR ( ( :pID_ORCAMENTO_ini &lt;= 0 AND :pID_ORCAMENTO_fin &gt; 0 ) AND ( a.ID_ORCAMENTO &lt;= :pID_ORCAMENTO_fin ) ) ) INTO :ID_ORCAMENTO , :ID_CLIENTE , :CLIENTE_NOME , :DT_EMISSAO , :DT_VALIDADE , :DT_ENTREGA , :DT_VENCIMENTO , :VALOR_TOTAL , :STATUS DO BEGIN SUSPEND ; END END;';

erro = 'sp_tri_orca_pesq_by_clientenome';
execute statement 'CREATE OR ALTER PROCEDURE SP_TRI_ORCA_PESQ_BY_CLIENTENOME ( pCLIENTE_NOME TYPE OF COLUMN TB_CLIENTE.NOME ,pTipoPesquisa integer ) RETURNS ( ID_ORCAMENTO TYPE OF COLUMN TRI_ORCA_ORCAMENTOS.ID_ORCAMENTO ,ID_CLIENTE TYPE OF COLUMN TRI_ORCA_ORCAMENTOS.ID_CLIENTE ,CLIENTE_NOME TYPE OF COLUMN TB_CLIENTE.NOME ,DT_EMISSAO TYPE OF COLUMN TRI_ORCA_ORCAMENTOS.DT_EMISSAO , DT_VALIDADE TYPE OF COLUMN TRI_ORCA_ORCAMENTOS.DT_VALIDADE , DT_ENTREGA TYPE OF COLUMN TRI_ORCA_ORCAMENTOS.DT_ENTREGA , DT_VENCIMENTO TYPE OF COLUMN TRI_ORCA_ORCAMENTOS.DT_VENCIMENTO , VALOR_TOTAL TYPE OF COLUMN TRI_ORCA_ORCAMENTOS.VALOR_TOTAL , STATUS TYPE OF COLUMN TRI_ORCA_ORCAMENTOS.STATUS ) AS BEGIN for SELECT a.ID_ORCAMENTO , a.ID_CLIENTE , b.NOME AS CLIENTE_NOME , a.DT_EMISSAO , a.DT_VALIDADE , a.DT_ENTREGA , a.DT_VENCIMENTO , a.VALOR_TOTAL , a.STATUS FROM TRI_ORCA_ORCAMENTOS a JOIN TB_CLIENTE b ON b.ID_CLIENTE = a.ID_CLIENTE WHERE ( ( :pTipoPesquisa = 0 AND ( b.NOME CONTAINING :pCLIENTE_NOME ) ) OR ( :pTipoPesquisa = 1 AND ( b.NOME STARTING WITH :pCLIENTE_NOME ) ) OR ( :pTipoPesquisa = 2 AND ( b.NOME = :pCLIENTE_NOME ) ) ) INTO :ID_ORCAMENTO , :ID_CLIENTE , :CLIENTE_NOME , :DT_EMISSAO , :DT_VALIDADE , :DT_ENTREGA , :DT_VENCIMENTO , :VALOR_TOTAL , :STATUS DO BEGIN SUSPEND ; END END;';

erro = 'deu certo';

SUSPEND;
WHEN ANY DO
BEGIN

END
END;</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="FDBConnString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="D_ORCA_PROCEDURES_2" Modifier="Public" Name="D_ORCA_PROCEDURES_2" QueryType="Scalar" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy3" UserSourceName="D_ORCA_PROCEDURES_2">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>CREATE OR ALTER PROCEDURE SP_TRI_ORCA_PROCEDURES_2
RETURNS (
erro VARCHAR(64)
)
AS
BEGIN

erro = 'sp_tri_orca_getby_orcastatus';
EXECUTE STATEMENT 'CREATE OR ALTER PROCEDURE SP_TRI_ORCA_GETBY_ORCASTATUS ( pID_ORCAMENTO INTEGER , pSTATUS TYPE OF COLUMN TRI_ORCA_ORCAMENTOS.STATUS ) RETURNS ( ID_ORCAMENTO INTEGER , ID_CLIENTE INTEGER , DT_EMISSAO DATE , ID_FORNEC_TRANSP INTEGER , DT_VALIDADE DATE , ID_PARCELA TYPE OF COLUMN TRI_ORCA_ORCAMENTOS.ID_PARCELA , ID_USER INTEGER , STATUS TYPE OF COLUMN TRI_ORCA_ORCAMENTOS.STATUS , SUBTOTAL TYPE OF COLUMN TRI_ORCA_ORCAMENTOS.SUBTOTAL , DESCONTO_TOTAL TYPE OF COLUMN TRI_ORCA_ORCAMENTOS.DESCONTO_TOTAL , DT_ENTREGA DATE , VALOR_TOTAL TYPE OF COLUMN TRI_ORCA_ORCAMENTOS.VALOR_TOTAL , DT_VENCIMENTO DATE , VALOR_FRETE TYPE OF COLUMN TRI_ORCA_ORCAMENTOS.VALOR_FRETE , NOME_SOLICITANTE TYPE OF COLUMN TRI_ORCA_ORCAMENTOS.NOME_SOLICITANTE , OBSERVACOES TYPE OF COLUMN TRI_ORCA_ORCAMENTOS.OBSERVACOES , ID_CAIXA TYPE OF COLUMN TRI_ORCA_ORCAMENTOS.ID_CAIXA ) AS BEGIN for SELECT ID_ORCAMENTO , ID_CLIENTE , DT_EMISSAO , ID_FORNEC_TRANSP , DT_VALIDADE , ID_PARCELA , ID_USER , STATUS , SUBTOTAL , DESCONTO_TOTAL , DT_ENTREGA , VALOR_TOTAL , DT_VENCIMENTO , VALOR_FRETE , NOME_SOLICITANTE , OBSERVACOES , ID_CAIXA FROM TRI_ORCA_ORCAMENTOS WHERE ID_ORCAMENTO = :pID_ORCAMENTO AND STATUS = :pSTATUS INTO :ID_ORCAMENTO , :ID_CLIENTE , :DT_EMISSAO , :ID_FORNEC_TRANSP , :DT_VALIDADE , :ID_PARCELA , :ID_USER , :STATUS , :SUBTOTAL , :DESCONTO_TOTAL , :DT_ENTREGA , :VALOR_TOTAL , :DT_VENCIMENTO , :VALOR_FRETE , :NOME_SOLICITANTE , :OBSERVACOES , :ID_CAIXA DO BEGIN SUSPEND ; END END;';

erro = 'sp_tri_orca_fechaorca';
EXECUTE STATEMENT 'CREATE OR ALTER PROCEDURE SP_TRI_ORCA_FECHAORCA ( pID_ORCAMENTO INTEGER , pID_CUPOM INTEGER , pID_CAIXA SMALLINT ) AS BEGIN INSERT INTO TRI_PDV_ORCA_CUPOM_REL (ID_ORCAMENTO , ID_CUPOM , TS_INCLUSAO , ID_CAIXA ) VALUES (:pID_ORCAMENTO , :pID_CUPOM , CURRENT_TIMESTAMP , :pID_CAIXA ) ; UPDATE TRI_ORCA_ORCAMENTOS SET STATUS =''FECHADO'' WHERE ID_ORCAMENTO = :pID_ORCAMENTO ; END;';

erro = 'sp_tri_orca_reativaorca';
EXECUTE STATEMENT 'CREATE OR ALTER PROCEDURE SP_TRI_ORCA_REATIVAORCA ( pID_CUPOM INTEGER ) RETURNS ( rORCA_REATIVADO VARCHAR(1) ) AS DECLARE VARIABLE vID_ORCAMENTO TYPE OF COLUMN TRI_PDV_ORCA_CUPOM_REL.ID_ORCAMENTO; BEGIN SELECT ID_ORCAMENTO FROM TRI_PDV_ORCA_CUPOM_REL WHERE ID_CUPOM = :pID_CUPOM INTO :vID_ORCAMENTO ; rORCA_REATIVADO = ''N''; IF (:vID_ORCAMENTO IS NOT NULL) THEN BEGIN DELETE FROM TRI_PDV_ORCA_CUPOM_REL WHERE ID_CUPOM = :pID_CUPOM AND ID_ORCAMENTO = :vID_ORCAMENTO ; UPDATE TRI_ORCA_ORCAMENTOS SET STATUS =''SALVO'' WHERE ID_ORCAMENTO = :vID_ORCAMENTO ; rORCA_REATIVADO = ''S''; END END;';

erro = 'deu certo';

SUSPEND;
WHEN ANY DO
BEGIN

END
END;</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="FDBConnString (Settings)" DbObjectName="&quot;SP_TRI_ORCA_ATUALIZATABELAS&quot;" DbObjectType="StoredProcedure" GenerateShortCommands="true" GeneratorSourceName="SP_TRI_ORCA_ATUALIZATABELAS" Modifier="Public" Name="SP_TRI_ORCA_ATUALIZATABELAS" QueryType="Scalar" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy4" UserSourceName="SP_TRI_ORCA_ATUALIZATABELAS">
                <SelectCommand>
                  <DbCommand CommandType="StoredProcedure" ModifiedByUser="false">
                    <CommandText>"SP_TRI_ORCA_ATUALIZATABELAS"</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="FDBConnString (Settings)" DbObjectName="&quot;SP_TRI_ORCA_CRIATABELAS&quot;" DbObjectType="StoredProcedure" GenerateShortCommands="true" GeneratorSourceName="SP_TRI_ORCA_CRIATABELAS" Modifier="Public" Name="SP_TRI_ORCA_CRIATABELAS" QueryType="Scalar" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy5" UserSourceName="SP_TRI_ORCA_CRIATABELAS">
                <SelectCommand>
                  <DbCommand CommandType="StoredProcedure" ModifiedByUser="false">
                    <CommandText>"SP_TRI_ORCA_CRIATABELAS"</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="FDBConnString (Settings)" DbObjectName="&quot;SP_TRI_ORCA_PROCEDURES&quot;" DbObjectType="StoredProcedure" GenerateShortCommands="true" GeneratorSourceName="SP_TRI_ORCA_PROCEDURES" Modifier="Public" Name="SP_TRI_ORCA_PROCEDURES" QueryType="Scalar" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy6" UserSourceName="SP_TRI_ORCA_PROCEDURES">
                <SelectCommand>
                  <DbCommand CommandType="StoredProcedure" ModifiedByUser="false">
                    <CommandText>"SP_TRI_ORCA_PROCEDURES"</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="FDBConnString (Settings)" DbObjectName="&quot;SP_TRI_ORCA_PROCEDURES_2&quot;" DbObjectType="StoredProcedure" GenerateShortCommands="true" GeneratorSourceName="SP_TRI_ORCA_PROCEDURES_2" Modifier="Public" Name="SP_TRI_ORCA_PROCEDURES_2" QueryType="Scalar" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy7" UserSourceName="SP_TRI_ORCA_PROCEDURES_2">
                <SelectCommand>
                  <DbCommand CommandType="StoredProcedure" ModifiedByUser="false">
                    <CommandText>"SP_TRI_ORCA_PROCEDURES_2"</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="FDBConnString (Settings)" DbObjectName="&quot;SP_TRI_ORCA_REATIVAORCA&quot;" DbObjectType="StoredProcedure" GenerateShortCommands="true" GeneratorSourceName="SP_TRI_ORCA_REATIVAORCA" Modifier="Public" Name="SP_TRI_ORCA_REATIVAORCA" QueryType="Scalar" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy8" UserSourceName="SP_TRI_ORCA_REATIVAORCA">
                <SelectCommand>
                  <DbCommand CommandType="StoredProcedure" ModifiedByUser="false">
                    <CommandText>"SP_TRI_ORCA_REATIVAORCA"</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="PID_CUPOM" Precision="0" Scale="0" Size="4" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="FDBDataSetOrcam" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="FDBDataSetOrcam" msprop:Generator_UserDSName="FDBDataSetOrcam">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="TRI_ORCA_PRODUTOS" msprop:Generator_TableClassName="TRI_ORCA_PRODUTOSDataTable" msprop:Generator_TableVarName="tableTRI_ORCA_PRODUTOS" msprop:Generator_TablePropName="TRI_ORCA_PRODUTOS" msprop:Generator_RowDeletingName="TRI_ORCA_PRODUTOSRowDeleting" msprop:Generator_RowChangingName="TRI_ORCA_PRODUTOSRowChanging" msprop:Generator_RowEvHandlerName="TRI_ORCA_PRODUTOSRowChangeEventHandler" msprop:Generator_RowDeletedName="TRI_ORCA_PRODUTOSRowDeleted" msprop:Generator_UserTableName="TRI_ORCA_PRODUTOS" msprop:Generator_RowChangedName="TRI_ORCA_PRODUTOSRowChanged" msprop:Generator_RowEvArgName="TRI_ORCA_PRODUTOSRowChangeEvent" msprop:Generator_RowClassName="TRI_ORCA_PRODUTOSRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID_PRODUTO" msprop:Generator_ColumnVarNameInTable="columnID_PRODUTO" msprop:Generator_ColumnPropNameInRow="ID_PRODUTO" msprop:Generator_ColumnPropNameInTable="ID_PRODUTOColumn" msprop:Generator_UserColumnName="ID_PRODUTO" type="xs:int" />
              <xs:element name="ID_ESTOQUE" msprop:Generator_ColumnVarNameInTable="columnID_ESTOQUE" msprop:Generator_ColumnPropNameInRow="ID_ESTOQUE" msprop:Generator_ColumnPropNameInTable="ID_ESTOQUEColumn" msprop:Generator_UserColumnName="ID_ESTOQUE" type="xs:int" />
              <xs:element name="QUANT" msprop:Generator_ColumnVarNameInTable="columnQUANT" msprop:Generator_ColumnPropNameInRow="QUANT" msprop:Generator_ColumnPropNameInTable="QUANTColumn" msprop:Generator_UserColumnName="QUANT" type="xs:decimal" />
              <xs:element name="VALOR" msprop:Generator_ColumnVarNameInTable="columnVALOR" msprop:Generator_ColumnPropNameInRow="VALOR" msprop:Generator_ColumnPropNameInTable="VALORColumn" msprop:Generator_UserColumnName="VALOR" type="xs:decimal" />
              <xs:element name="DESCONTO" msprop:Generator_ColumnVarNameInTable="columnDESCONTO" msprop:Generator_ColumnPropNameInRow="DESCONTO" msprop:Generator_ColumnPropNameInTable="DESCONTOColumn" msprop:Generator_UserColumnName="DESCONTO" type="xs:decimal" />
              <xs:element name="VALOR_TOT" msprop:Generator_ColumnVarNameInTable="columnVALOR_TOT" msprop:Generator_ColumnPropNameInRow="VALOR_TOT" msprop:Generator_ColumnPropNameInTable="VALOR_TOTColumn" msprop:Generator_UserColumnName="VALOR_TOT" type="xs:decimal" />
              <xs:element name="ID_ORCAMENTO" msprop:Generator_ColumnVarNameInTable="columnID_ORCAMENTO" msprop:Generator_ColumnPropNameInRow="ID_ORCAMENTO" msprop:Generator_ColumnPropNameInTable="ID_ORCAMENTOColumn" msprop:Generator_UserColumnName="ID_ORCAMENTO" type="xs:int" />
              <xs:element name="NUM_PRODUTO" msprop:Generator_ColumnVarNameInTable="columnNUM_PRODUTO" msprop:Generator_ColumnPropNameInRow="NUM_PRODUTO" msprop:Generator_ColumnPropNameInTable="NUM_PRODUTOColumn" msprop:Generator_UserColumnName="NUM_PRODUTO" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="TRI_ORCA_ORCAMENTOS" msprop:Generator_TableClassName="TRI_ORCA_ORCAMENTOSDataTable" msprop:Generator_TableVarName="tableTRI_ORCA_ORCAMENTOS" msprop:Generator_TablePropName="TRI_ORCA_ORCAMENTOS" msprop:Generator_RowDeletingName="TRI_ORCA_ORCAMENTOSRowDeleting" msprop:Generator_RowChangingName="TRI_ORCA_ORCAMENTOSRowChanging" msprop:Generator_RowEvHandlerName="TRI_ORCA_ORCAMENTOSRowChangeEventHandler" msprop:Generator_RowDeletedName="TRI_ORCA_ORCAMENTOSRowDeleted" msprop:Generator_UserTableName="TRI_ORCA_ORCAMENTOS" msprop:Generator_RowChangedName="TRI_ORCA_ORCAMENTOSRowChanged" msprop:Generator_RowEvArgName="TRI_ORCA_ORCAMENTOSRowChangeEvent" msprop:Generator_RowClassName="TRI_ORCA_ORCAMENTOSRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID_ORCAMENTO" msprop:Generator_ColumnVarNameInTable="columnID_ORCAMENTO" msprop:Generator_ColumnPropNameInRow="ID_ORCAMENTO" msprop:Generator_ColumnPropNameInTable="ID_ORCAMENTOColumn" msprop:Generator_UserColumnName="ID_ORCAMENTO" type="xs:int" />
              <xs:element name="ID_CLIENTE" msprop:Generator_ColumnVarNameInTable="columnID_CLIENTE" msprop:Generator_ColumnPropNameInRow="ID_CLIENTE" msprop:Generator_ColumnPropNameInTable="ID_CLIENTEColumn" msprop:Generator_UserColumnName="ID_CLIENTE" type="xs:int" minOccurs="0" />
              <xs:element name="DT_EMISSAO" msprop:Generator_ColumnVarNameInTable="columnDT_EMISSAO" msprop:Generator_ColumnPropNameInRow="DT_EMISSAO" msprop:Generator_ColumnPropNameInTable="DT_EMISSAOColumn" msprop:Generator_UserColumnName="DT_EMISSAO" type="xs:dateTime" minOccurs="0" />
              <xs:element name="ID_FORNEC_TRANSP" msprop:Generator_ColumnVarNameInTable="columnID_FORNEC_TRANSP" msprop:Generator_ColumnPropNameInRow="ID_FORNEC_TRANSP" msprop:Generator_ColumnPropNameInTable="ID_FORNEC_TRANSPColumn" msprop:Generator_UserColumnName="ID_FORNEC_TRANSP" type="xs:int" minOccurs="0" />
              <xs:element name="DT_VALIDADE" msprop:Generator_ColumnVarNameInTable="columnDT_VALIDADE" msprop:Generator_ColumnPropNameInRow="DT_VALIDADE" msprop:Generator_ColumnPropNameInTable="DT_VALIDADEColumn" msprop:Generator_UserColumnName="DT_VALIDADE" type="xs:dateTime" minOccurs="0" />
              <xs:element name="ID_PARCELA" msprop:Generator_ColumnVarNameInTable="columnID_PARCELA" msprop:Generator_ColumnPropNameInRow="ID_PARCELA" msprop:Generator_ColumnPropNameInTable="ID_PARCELAColumn" msprop:Generator_UserColumnName="ID_PARCELA" type="xs:short" minOccurs="0" />
              <xs:element name="ID_USER" msprop:Generator_ColumnVarNameInTable="columnID_USER" msprop:Generator_ColumnPropNameInRow="ID_USER" msprop:Generator_ColumnPropNameInTable="ID_USERColumn" msprop:Generator_UserColumnName="ID_USER" type="xs:int" minOccurs="0" />
              <xs:element name="STATUS" msprop:Generator_ColumnVarNameInTable="columnSTATUS" msprop:Generator_ColumnPropNameInRow="STATUS" msprop:Generator_ColumnPropNameInTable="STATUSColumn" msprop:Generator_UserColumnName="STATUS" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="32" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="SUBTOTAL" msprop:Generator_ColumnVarNameInTable="columnSUBTOTAL" msprop:Generator_ColumnPropNameInRow="SUBTOTAL" msprop:Generator_ColumnPropNameInTable="SUBTOTALColumn" msprop:Generator_UserColumnName="SUBTOTAL" type="xs:decimal" minOccurs="0" />
              <xs:element name="DESCONTO_TOTAL" msprop:Generator_ColumnVarNameInTable="columnDESCONTO_TOTAL" msprop:Generator_ColumnPropNameInRow="DESCONTO_TOTAL" msprop:Generator_ColumnPropNameInTable="DESCONTO_TOTALColumn" msprop:Generator_UserColumnName="DESCONTO_TOTAL" type="xs:decimal" minOccurs="0" />
              <xs:element name="DT_ENTREGA" msprop:Generator_ColumnVarNameInTable="columnDT_ENTREGA" msprop:Generator_ColumnPropNameInRow="DT_ENTREGA" msprop:Generator_ColumnPropNameInTable="DT_ENTREGAColumn" msprop:Generator_UserColumnName="DT_ENTREGA" type="xs:dateTime" minOccurs="0" />
              <xs:element name="VALOR_TOTAL" msprop:Generator_ColumnVarNameInTable="columnVALOR_TOTAL" msprop:Generator_ColumnPropNameInRow="VALOR_TOTAL" msprop:Generator_ColumnPropNameInTable="VALOR_TOTALColumn" msprop:Generator_UserColumnName="VALOR_TOTAL" type="xs:decimal" minOccurs="0" />
              <xs:element name="DT_VENCIMENTO" msprop:Generator_ColumnVarNameInTable="columnDT_VENCIMENTO" msprop:Generator_ColumnPropNameInRow="DT_VENCIMENTO" msprop:Generator_ColumnPropNameInTable="DT_VENCIMENTOColumn" msprop:Generator_UserColumnName="DT_VENCIMENTO" type="xs:dateTime" minOccurs="0" />
              <xs:element name="VALOR_FRETE" msprop:Generator_ColumnVarNameInTable="columnVALOR_FRETE" msprop:Generator_ColumnPropNameInRow="VALOR_FRETE" msprop:Generator_ColumnPropNameInTable="VALOR_FRETEColumn" msprop:Generator_UserColumnName="VALOR_FRETE" type="xs:decimal" minOccurs="0" />
              <xs:element name="NOME_SOLICITANTE" msprop:Generator_ColumnVarNameInTable="columnNOME_SOLICITANTE" msprop:Generator_ColumnPropNameInRow="NOME_SOLICITANTE" msprop:Generator_ColumnPropNameInTable="NOME_SOLICITANTEColumn" msprop:Generator_UserColumnName="NOME_SOLICITANTE" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="35" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="OBSERVACOES" msprop:Generator_ColumnVarNameInTable="columnOBSERVACOES" msprop:Generator_ColumnPropNameInRow="OBSERVACOES" msprop:Generator_ColumnPropNameInTable="OBSERVACOESColumn" msprop:Generator_UserColumnName="OBSERVACOES" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="200" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="ID_CAIXA" msprop:Generator_ColumnVarNameInTable="columnID_CAIXA" msprop:Generator_ColumnPropNameInRow="ID_CAIXA" msprop:Generator_ColumnPropNameInTable="ID_CAIXAColumn" msprop:Generator_UserColumnName="ID_CAIXA" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="TRI_PDV_ORCA_CUPOM_REL" msprop:Generator_TableClassName="TRI_PDV_ORCA_CUPOM_RELDataTable" msprop:Generator_TableVarName="tableTRI_PDV_ORCA_CUPOM_REL" msprop:Generator_RowChangedName="TRI_PDV_ORCA_CUPOM_RELRowChanged" msprop:Generator_TablePropName="TRI_PDV_ORCA_CUPOM_REL" msprop:Generator_RowDeletingName="TRI_PDV_ORCA_CUPOM_RELRowDeleting" msprop:Generator_RowChangingName="TRI_PDV_ORCA_CUPOM_RELRowChanging" msprop:Generator_RowEvHandlerName="TRI_PDV_ORCA_CUPOM_RELRowChangeEventHandler" msprop:Generator_RowDeletedName="TRI_PDV_ORCA_CUPOM_RELRowDeleted" msprop:Generator_RowClassName="TRI_PDV_ORCA_CUPOM_RELRow" msprop:Generator_UserTableName="TRI_PDV_ORCA_CUPOM_REL" msprop:Generator_RowEvArgName="TRI_PDV_ORCA_CUPOM_RELRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID_ORCAMENTO" msprop:Generator_ColumnVarNameInTable="columnID_ORCAMENTO" msprop:Generator_ColumnPropNameInRow="ID_ORCAMENTO" msprop:Generator_ColumnPropNameInTable="ID_ORCAMENTOColumn" msprop:Generator_UserColumnName="ID_ORCAMENTO" type="xs:int" />
              <xs:element name="ID_CUPOM" msprop:Generator_ColumnVarNameInTable="columnID_CUPOM" msprop:Generator_ColumnPropNameInRow="ID_CUPOM" msprop:Generator_ColumnPropNameInTable="ID_CUPOMColumn" msprop:Generator_UserColumnName="ID_CUPOM" type="xs:int" />
              <xs:element name="TS_INCLUSAO" msprop:Generator_ColumnVarNameInTable="columnTS_INCLUSAO" msprop:Generator_ColumnPropNameInRow="TS_INCLUSAO" msprop:Generator_ColumnPropNameInTable="TS_INCLUSAOColumn" msprop:Generator_UserColumnName="TS_INCLUSAO" type="xs:dateTime" minOccurs="0" />
              <xs:element name="ID_CAIXA" msprop:Generator_ColumnVarNameInTable="columnID_CAIXA" msprop:Generator_ColumnPropNameInRow="ID_CAIXA" msprop:Generator_ColumnPropNameInTable="ID_CAIXAColumn" msprop:Generator_UserColumnName="ID_CAIXA" type="xs:short" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:TRI_ORCA_PRODUTOS" />
      <xs:field xpath="mstns:ID_PRODUTO" />
    </xs:unique>
    <xs:unique name="TRI_ORCA_ORCAMENTOS_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:TRI_ORCA_ORCAMENTOS" />
      <xs:field xpath="mstns:ID_ORCAMENTO" />
    </xs:unique>
    <xs:unique name="TRI_PDV_ORCA_CUPOM_REL_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:TRI_PDV_ORCA_CUPOM_REL" />
      <xs:field xpath="mstns:ID_ORCAMENTO" />
      <xs:field xpath="mstns:ID_CUPOM" />
    </xs:unique>
  </xs:element>
</xs:schema>